{"version":3,"file":"empty-state.js","sources":["../../src/utilities/classnames.ts","../../src/components/Icon.tsx","../../src/components/EmptyState.tsx"],"sourcesContent":["export default function classNames(...args: any[]): string {\n  let result = '';\n\n  for (const arg of args) {\n    if (!arg) { continue; }\n\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      result = `${result} ${arg}`;\n      continue;\n    }\n\n    if (Array.isArray(arg)) {\n      result = `${result} ${classNames(...arg)}`;\n      continue;\n    }\n\n    if (typeof arg === 'object') {\n      const keys = Object.keys(arg);\n      for (const key of keys) {\n        if (arg[key]) { result = `${result} ${key}`; }\n      }\n    }\n  }\n\n  return result.trim();\n}\n","import React from 'react';\nimport { IconType } from '../types/icons';\nimport cn from '../utilities/classnames';\n\nexport interface IconProps {\n  type: IconType;\n  className?: string;\n  onClick?: (event: any) => void;\n  onDark?: boolean;\n}\n\nconst lightStyle = { color: 'white' };\n\nexport const Icon: React.SFC<IconProps> = ({\n  type,\n  className,\n  onClick: handleClick,\n  onDark,\n}) => (\n  <i\n    className={cn('sg-icon', `sg-icon-${type}`, { [className]: !!className })}\n    onClick={handleClick}\n    style={onDark ? lightStyle : null}\n  />\n);\n\nIcon.defaultProps = {\n  className: '',\n  onDark: false,\n};\n\nexport default Icon;\n","import React from 'react';\nimport cn from '../utilities/classnames';\n\nimport { IconType } from '../types/icons';\nimport Icon from './Icon';\n\nconst evaluateRenderProp: (\n  prop: IconType | (() => React.ReactNode),\n) => React.ReactNode = (prop) => {\n  if (typeof prop === 'function') {\n    return prop();\n  } else {\n    return <Icon type={prop} />;\n  }\n};\n\nexport interface EmptyStateProps {\n  children?: string | React.ReactElement<any> | Array<React.ReactElement<any>>;\n  icon?: IconType | (() => React.ReactNode);\n  buttons?: Array<React.ReactElement<any>>;\n  header?: string;\n}\n\nexport const EmptyState: React.SFC<EmptyStateProps> = ({\n  children,\n  icon,\n  buttons,\n  header,\n}) => (\n  <div className=\"table-state is-empty\">\n    {icon && evaluateRenderProp(icon)}\n    {header && <h2>{header}</h2>}\n    {children}\n  </div>\n);\n\nexport default EmptyState;\n"],"names":["cn"],"mappings":";;;;;;;;;IAAmC,cAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,yBAAc;;IAC/C,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;QAAjB,IAAM,GAAG,aAAA;QACZ,IAAI,CAAC,GAAG,EAAE;YAAE,SAAS;SAAE;QAEvB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACtD,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;YAC5B,SAAS;SACV;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,MAAM,GAAM,MAAM,SAAI,UAAU,eAAI,GAAG,CAAG,CAAC;YAC3C,SAAS;SACV;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG,aAAA;gBACZ,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;oBAAE,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;iBAAE;aAC/C;SACF;KACF;IAED,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;CACtB;;ACdD,IAAM,UAAU,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAEtC,AAAO,IAAM,IAAI,GAAyB,UAAC,EAK1C;QAJC,cAAI,EACJ,wBAAS,EACT,wBAAoB,EACpB,kBAAM;IACF,QACJ,2BACE,SAAS,EAAEA,UAAE,CAAC,SAAS,EAAE,aAAW,IAAM,YAAI,GAAC,SAAS,IAAG,CAAC,CAAC,SAAS,MAAG,EACzE,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,MAAM,GAAG,UAAU,GAAG,IAAI,GACjC;;CACH,CAAC;AAEF,IAAI,CAAC,YAAY,GAAG;IAClB,SAAS,EAAE,EAAE;IACb,MAAM,EAAE,KAAK;CACd,CAAC;;ACvBF,IAAM,kBAAkB,GAED,UAAC,IAAI;IAC1B,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;QAC9B,OAAO,IAAI,EAAE,CAAC;KACf;SAAM;QACL,OAAO,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI,GAAI,CAAC;KAC7B;CACF,CAAC;AASF,AAAO,IAAM,UAAU,GAA+B,UAAC,EAKtD;QAJC,sBAAQ,EACR,cAAI,EACJ,oBAAO,EACP,kBAAM;IACF,QACJ,6BAAK,SAAS,EAAC,sBAAsB;QAClC,IAAI,IAAI,kBAAkB,CAAC,IAAI,CAAC;QAChC,MAAM,IAAI,gCAAK,MAAM,CAAM;QAC3B,QAAQ,CACL;CACP;;;;;;;;;;;;;"}