{"version":3,"file":"toggle-buttons.js","sources":["../../src/utilities/find-active-index.ts","../../src/components/ToggleButtons.tsx"],"sourcesContent":["import { Children, ReactElement } from 'react';\n\nconst findActiveIndex = (components: Array<ReactElement<any>>): number => {\n  const activeIndex = Children.map(\n    components,\n    (component: React.ReactElement<any>) => component.props.active,\n  ).indexOf(true);\n\n  if (activeIndex === -1) {\n    return 0;\n  }\n  return activeIndex;\n};\n\nexport default findActiveIndex;\n","import React from 'react';\nimport cn from '../utilities/classnames';\nimport findActiveIndex from '../utilities/find-active-index';\nimport { ButtonProps } from './Button';\n\nconst { map } = React.Children;\n\nexport interface ToggleButtonsProps {\n  children?: any[];\n  onChange?: (children: React.ReactNode, label?: string, index?: number) => any;\n}\n\nexport interface ToggleButtonsState {\n  activeIndex: number;\n}\n\nexport const ToggleButtons: React.SFC<ToggleButtonsProps> = ({\n  children,\n  onChange,\n}) => {\n  return (\n    <div className=\"btn-group\">\n      {map(children, (button: React.ReactElement<any>, index) => {\n        return React.cloneElement(button, {\n          onClick(event: any) {\n            const { children: label, onClick } = button.props;\n            onClick(event);\n            onChange(event, label, index);\n          },\n          type: 'group-item',\n        });\n      })}\n    </div>\n  );\n};\n\nexport class StatefulToggleButtons extends React.Component<\n  ToggleButtonsProps,\n  ToggleButtonsState\n> {\n  public state = {\n    activeIndex: findActiveIndex(this.props.children),\n  };\n\n  public render() {\n    const { activeIndex } = this.state;\n    const buttons = map(\n      this.props.children,\n      (button: React.ReactElement<any>, index) => {\n        return React.cloneElement(button, {\n          active: index === activeIndex,\n        });\n      },\n    );\n    return (\n      <ToggleButtons {...this.props} onChange={this.handleChange}>\n        {buttons}\n      </ToggleButtons>\n    );\n  }\n\n  private handleChange(event: any, label: string, index: number) {\n    const { onChange: handleChange } = this.props;\n    this.setState(\n      {\n        activeIndex: index,\n      },\n      () => {\n        handleChange(event, label, index);\n      },\n    );\n  }\n}\n\nexport default ToggleButtons;\n"],"names":["Children","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,eAAe,GAAG,UAAC,UAAoC;IAC3D,IAAM,WAAW,GAAGA,cAAQ,CAAC,GAAG,CAC9B,UAAU,EACV,UAAC,SAAkC,IAAK,OAAA,SAAS,CAAC,KAAK,CAAC,MAAM,GAAA,CAC/D,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAEhB,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;QACtB,OAAO,CAAC,CAAC;KACV;IACD,OAAO,WAAW,CAAC;CACpB;;ACPO,IAAA,iCAAG,CAAoB;AAW/B,AAAO,IAAM,aAAa,GAAkC,UAAC,EAG5D;QAFC,sBAAQ,EACR,sBAAQ;IAER,QACEC,sCAAK,SAAS,EAAC,WAAW,IACvB,GAAG,CAAC,QAAQ,EAAE,UAAC,MAA+B,EAAE,KAAK;QACpD,OAAOA,cAAK,CAAC,YAAY,CAAC,MAAM,EAAE;YAChC,OAAO,YAAC,KAAU;gBACV,IAAA,iBAA2C,EAAzC,mBAAe,EAAE,oBAAO,CAAkB;gBAClD,OAAO,CAAC,KAAK,CAAC,CAAC;gBACf,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC/B;YACD,IAAI,EAAE,YAAY;SACnB,CAAC,CAAC;KACJ,CAAC,CACE,EACN;CACH,CAAC;AAEK;IAAoC,yCAG1C;IAHM;QAAA,qEAoCN;QAhCQ,WAAK,GAAG;YACb,WAAW,EAAE,eAAe,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SAClD,CAAC;;KA8BH;IA5BQ,sCAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QACnC,IAAM,OAAO,GAAG,GAAG,CACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,EACnB,UAAC,MAA+B,EAAE,KAAK;YACrC,OAAOA,cAAK,CAAC,YAAY,CAAC,MAAM,EAAE;gBAChC,MAAM,EAAE,KAAK,KAAK,WAAW;aAC9B,CAAC,CAAC;SACJ,CACF,CAAC;QACF,QACEA,6BAAC,aAAa,eAAK,IAAI,CAAC,KAAK,IAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,KACvD,OAAO,CACM,EAChB;KACH;IAEO,4CAAY,GAApB,UAAqB,KAAU,EAAE,KAAa,EAAE,KAAa;QACnD,IAAA,kCAAsB,CAAgB;QAC9C,IAAI,CAAC,QAAQ,CACX;YACE,WAAW,EAAE,KAAK;SACnB,EACD;YACE,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACnC,CACF,CAAC;KACH;IACH,4BAAC;CAAA,CApC0CA,cAAK,CAAC,SAAS;;;;;;;;;;;;;;"}