{"version":3,"file":"sortable-table.js","sources":["../../src/utilities/classnames.ts","../../src/components/Table/TableBody.tsx","../../src/components/Table/TableCell.tsx","../../src/components/Table/TableHeader.tsx","../../src/components/Table/TableHeaderCell.tsx","../../src/components/Table/TableRow.tsx","../../src/components/Table/Table.tsx","../../src/components/Table/SortableTable.tsx"],"sourcesContent":["export default function classNames(...args: any[]): string {\n  let result = '';\n\n  for (const arg of args) {\n    if (!arg) { continue; }\n\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      result = `${result} ${arg}`;\n      continue;\n    }\n\n    if (Array.isArray(arg)) {\n      result = `${result} ${classNames(...arg)}`;\n      continue;\n    }\n\n    if (typeof arg === 'object') {\n      const keys = Object.keys(arg);\n      for (const key of keys) {\n        if (arg[key]) { result = `${result} ${key}`; }\n      }\n    }\n  }\n\n  return result.trim();\n}\n","import React from 'react';\n\nexport interface TableBodyProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const TableBody: React.SFC<TableBodyProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <tbody className={className}>\n      {children}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\n\nexport interface TableCellProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const TableCell: React.SFC<TableCellProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <td className={className}>\n      {children}\n    </td>\n  );\n};\n\nexport default TableCell;\n","import React from 'react';\n\nexport interface TableHeaderProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const TableHeader: React.SFC<TableHeaderProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <thead className={className}>\n      {children}\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport cn from '../../utilities/classnames';\n\nexport interface TableHeaderCellProps {\n  children?: React.ReactNode;\n  className?: string;\n  sortKey?: string;\n  // onClick must be a generic function.\n  // tslint:disable-next-line: ban-types\n  onClick?: Function;\n  ascending?: boolean;\n  sorted?: boolean;\n}\n\nexport class HeaderCell extends React.Component<TableHeaderCellProps> {\n  constructor(props: TableHeaderCellProps) {\n    super(props);\n  }\n\n  public handleClick = () => {\n    if (this.props.sortKey) {\n      if (this.props.ascending === false) {\n        this.props.onClick(this.props.sortKey, false);\n      } else {\n        this.props.onClick(this.props.sortKey, true);\n      }\n    }\n  }\n\n  public render() {\n    return (\n      <th\n        className={\n          cn(this.props.className,\n            { sort: !(this.props.sortKey === undefined) },\n            { 'sort-asc': this.props.sorted && this.props.ascending === true },\n            { 'sort-desc': this.props.sorted && this.props.ascending === false})\n          }\n        onClick={this.handleClick}\n      >\n        {this.props.children}\n      </th>\n    );\n  }\n}\n\nexport default HeaderCell;\n","import React from 'react';\n\nexport interface TableRowProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const TableRow: React.SFC<TableRowProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <tr className={className}>\n      {children}\n    </tr>\n  );\n};\n\nexport default TableRow;\n","import React from 'react';\nimport cn from '../../utilities/classnames';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableHeader from './TableHeader';\nimport HeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\nexport { TableCell, TableRow, TableHeader, TableBody, HeaderCell };\n\nexport interface TableProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const Table: React.SFC<TableProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <table className={cn('table-wrap', className)}>\n      {children}\n    </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport cn from '../../utilities/classnames';\nimport { HeaderCell, Table, TableBody, TableCell, TableHeader, TableRow } from './Table';\n\n// Trust me, it's more readable this way.\n// tslint:disable: max-line-length\n// tslint:disable: only-arrow-functions\n// tslint:disable: ban-types\n\nexport interface SortableTableProps {\n  children?: React.ReactNode;\n  className?: string;\n  rowData?: object[];\n  rowRenderer?: React.SFC<any>;\n  headerData?: HeaderData[];\n  headerRenderer?: React.SFC<any>;\n}\n\ninterface HeaderData {\n  name: string;\n  dataKey: string;\n  sort?: (rowData: object[], dataKey: string) => object[];\n}\n\nexport interface SortableTableState {\n  data?: object[];\n  sortBy?: string;\n  ascending?: boolean;\n}\n\nexport class SortableTable extends React.Component<SortableTableProps, SortableTableState> {\n  constructor(props: SortableTableProps) {\n    super(props);\n\n    this.state = {\n      ascending: undefined,\n      data: [],\n      sortBy: undefined,\n    };\n\n    this.handleHeaderClick = this.handleHeaderClick.bind(this);\n    this.sortData = this.sortData.bind(this);\n  }\n\n  public componentDidMount() {\n    this.sortData(this.props.headerData[0].dataKey, false);\n  }\n\n  public handleHeaderClick(dataKey: string, descending: boolean) {\n    this.sortData(dataKey, descending);\n  }\n\n  public sortData(sortBy: string, descending: boolean) {\n    const data = this.performSort(this.props.rowData, this.props.headerData, sortBy);\n    if (descending) {\n      this.setState({data: data.reverse(), ascending: false, sortBy});\n    } else {\n      this.setState({data, ascending: true, sortBy});\n    }\n  }\n\n  public render() {\n    const ascendingState = this.state.ascending;\n    const sortByKey = this.state.sortBy;\n\n    const defaultHeaderRenderer = ({name, dataKey, onClick, sort, ascending, sortBy}: {name: any, dataKey: string, onClick: (dataKey: string, descending: boolean) => void, sort?: Function, ascending?: boolean, sortBy: string}) => (\n      <HeaderCell sortKey={dataKey} onClick={onClick} ascending={ascendingState} sorted={dataKey === sortByKey}>\n        {name}\n      </HeaderCell>\n    );\n\n    const defaultRowRenderer = ({columns}: {columns: object}) => (\n      <TableRow>\n        {\n          this.props.headerData.map((header: HeaderData) =>\n            <TableCell key={'header-' + header.dataKey}>{columns[header.dataKey]}</TableCell>,\n          )\n        }\n      </TableRow>\n\n    );\n\n    const HeaderRenderer = this.props.headerRenderer || defaultHeaderRenderer;\n    const RowRenderer = this.props.rowRenderer || defaultRowRenderer;\n\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            {this.props.headerData.map((ele, index) =>\n              <HeaderRenderer\n                {...ele}\n                onClick={this.handleHeaderClick}\n                sortBy={sortByKey}\n                ascending={ascendingState}\n                key={'header-' + ele.dataKey}\n              />,\n            )}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {this.state.data.map((ele: object, index) => <RowRenderer key={'row-' + index} columns={ele}/>)}\n        </TableBody>\n      </Table>\n    );\n  }\n\n  private performSort(rowData: object[], headerData: HeaderData[], sortBy: string) {\n    const sortIndex = headerData.findIndex((ele) => ele.dataKey === sortBy);\n    let data = [] as object[];\n    if (typeof headerData[sortIndex].sort === 'function') {\n      data = headerData[sortIndex].sort(rowData, headerData[sortIndex].dataKey);\n    } else {\n      data = this.defaultSort(rowData, headerData[sortIndex].dataKey);\n    }\n    return data;\n  }\n\n  private defaultSort = function(array: any[], dataKey: string) {\n    return array.sort(function(a, b) {\n      const x = a[dataKey]; const y = b[dataKey];\n      return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n  };\n}\n\nexport default SortableTable;\n"],"names":["cn"],"mappings":"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"}