{"version":3,"file":"side-modal.js","sources":["../../src/utilities/classnames.ts","../../src/utilities/modals.ts","../../src/components/SideModal.tsx"],"sourcesContent":["export default function classNames(...args: any[]): string {\n  let result = '';\n\n  for (const arg of args) {\n    if (!arg) { continue; }\n\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      result = `${result} ${arg}`;\n      continue;\n    }\n\n    if (Array.isArray(arg)) {\n      result = `${result} ${classNames(...arg)}`;\n      continue;\n    }\n\n    if (typeof arg === 'object') {\n      const keys = Object.keys(arg);\n      for (const key of keys) {\n        if (arg[key]) { result = `${result} ${key}`; }\n      }\n    }\n  }\n\n  return result.trim();\n}\n","export interface ModalProps {\n  bodyNode?: ElementWithClassList;\n  isOpen?: boolean;\n}\n\ninterface ElementWithClassList extends Element {\n  classList: DOMTokenList;\n}\n\nconst modalOpenClass = 'modal-open';\n\nexport const modalWillReceiveProps: (nextProps: ModalProps, currentProps: ModalProps) => void =\n  (nextProps, currentProps) => {\n    if (nextProps.isOpen === currentProps.isOpen) { return; }\n\n    const { bodyNode } = currentProps;\n    if (nextProps.isOpen) {\n      bodyNode.classList.add(modalOpenClass);\n    } else {\n      bodyNode.classList.remove(modalOpenClass);\n    }\n  };\n","import React, { Fragment } from 'react';\nimport cn from '../utilities/classnames';\nimport {\n  ModalProps,\n  modalWillReceiveProps,\n} from '../utilities/modals';\n\ninterface SideModalProps extends ModalProps {\n  children?: React.ReactNode;\n  onClose: (evt: any) => void;\n}\n\nexport class SideModal extends React.Component<SideModalProps> {\n  public static defaultProps: Partial<SideModalProps> = { bodyNode: document.body };\n\n  public componentWillReceiveProps(nextProps: SideModalProps) {\n    modalWillReceiveProps(nextProps, this.props);\n  }\n\n  public render() {\n    return (\n      <Fragment>\n        <div className={cn('side-modal', { 'is-visible': this.props.isOpen })}>\n          {this.props.children}\n        </div>\n        <div\n          className={cn('modal-mask', { 'is-visible': this.props.isOpen })}\n          onClick={this.props.onClose}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default SideModal;\n"],"names":["React","Fragment","cn"],"mappings":";;;;;;;;;;;;;;;IAAmC,cAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,yBAAc;;IAC/C,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;QAAjB,IAAM,GAAG,aAAA;QACZ,IAAI,CAAC,GAAG,EAAE;YAAE,SAAS;SAAE;QAEvB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACtD,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;YAC5B,SAAS;SACV;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,MAAM,GAAM,MAAM,SAAI,UAAU,eAAI,GAAG,CAAG,CAAC;YAC3C,SAAS;SACV;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG,aAAA;gBACZ,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;oBAAE,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;iBAAE;aAC/C;SACF;KACF;IAED,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;CACtB;;AChBD,IAAM,cAAc,GAAG,YAAY,CAAC;AAEpC,AAAO,IAAM,qBAAqB,GAChC,UAAC,SAAS,EAAE,YAAY;IACtB,IAAI,SAAS,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;QAAE,OAAO;KAAE;IAEjD,IAAA,gCAAQ,CAAkB;IAClC,IAAI,SAAS,CAAC,MAAM,EAAE;QACpB,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;KACxC;SAAM;QACL,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KAC3C;CACF;;ACTI;IAAwB,6BAA+B;IAAvD;;KAoBN;IAjBQ,6CAAyB,GAAhC,UAAiC,SAAyB;QACxD,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9C;IAEM,0BAAM,GAAb;QACE,QACEA,6BAACC,cAAQ;YACPD,sCAAK,SAAS,EAAEE,UAAE,CAAC,YAAY,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAChB;YACNF,sCACE,SAAS,EAAEE,UAAE,CAAC,YAAY,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAChE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAC3B,CACO,EACX;KACH;IAlBa,sBAAY,GAA4B,EAAE,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;IAmBpF,gBAAC;CAAA,CApB8BF,cAAK,CAAC,SAAS;;;;;;;;;;;;;"}