{"version":3,"file":"dropdown-button.js","sources":["../../src/utilities/classnames.ts","../../src/components/Badge.tsx","../../src/components/Icon.tsx","../../src/components/Loader.tsx","../../src/components/Button.tsx","../../src/components/DropdownButton.tsx"],"sourcesContent":["export default function classNames(...args: any[]): string {\n  let result = '';\n\n  for (const arg of args) {\n    if (!arg) { continue; }\n\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      result = `${result} ${arg}`;\n      continue;\n    }\n\n    if (Array.isArray(arg)) {\n      result = `${result} ${classNames(...arg)}`;\n      continue;\n    }\n\n    if (typeof arg === 'object') {\n      const keys = Object.keys(arg);\n      for (const key of keys) {\n        if (arg[key]) { result = `${result} ${key}`; }\n      }\n    }\n  }\n\n  return result.trim();\n}\n","import React from 'react';\nimport { color as validColor } from '../types/color';\nimport cn from '../utilities/classnames';\n\nexport interface BadgeProps {\n  children?: string | number;\n  color?: string;\n  content?: string | number;\n}\n\nexport const Badge: React.SFC<BadgeProps> = ({ children, color, content }) => (\n  <span className={cn('badge', color)}>{children || content}</span>\n);\n\nBadge.defaultProps = {\n  children: 0,\n  color: '',\n};\n\nexport default Badge;\n","import React from 'react';\nimport { IconType } from '../types/icons';\nimport cn from '../utilities/classnames';\n\nexport interface IconProps {\n  type: IconType;\n  className?: string;\n  onClick?: (event: any) => void;\n  onDark?: boolean;\n}\n\nconst lightStyle = { color: 'white' };\n\nexport const Icon: React.SFC<IconProps> = ({\n  type,\n  className,\n  onClick: handleClick,\n  onDark,\n}) => (\n  <i\n    className={cn('sg-icon', `sg-icon-${type}`, { [className]: !!className })}\n    onClick={handleClick}\n    style={onDark ? lightStyle : null}\n  />\n);\n\nIcon.defaultProps = {\n  className: '',\n  onDark: false,\n};\n\nexport default Icon;\n","import React from 'react';\nimport cn from '../utilities/classnames';\n\nexport interface LoaderProps {\n  onDark?: boolean;\n  large?: boolean;\n  small?: boolean;\n  centered?: boolean;\n}\n\nexport const Loader: React.SFC<LoaderProps> = ({ onDark, large, small, centered }) => {\n  let size = 10;\n  if (large) {\n    size *= 2;\n  }\n  if (small) {\n    size /= 2;\n  }\n  return (\n    <svg\n      className={cn('sg-loader', {\n        'is-centered': centered,\n        'is-large': large,\n        'is-small': small,\n        'loader-on-dark': onDark,\n      })}\n    >\n      <rect className=\"logo-square bottom-left\" width={size} height={size} />\n      <rect className=\"logo-square bottom-middle\" width={size} height={size} />\n      <rect className=\"logo-square middle\" width={size} height={size} />\n      <rect className=\"logo-square top-middle\" width={size} height={size} />\n      <rect className=\"logo-square top-right\" width={size} height={size} />\n      <rect className=\"logo-square middle-left\" width={size} height={size} />\n      <rect className=\"logo-square middle-right\" width={size} height={size} />\n    </svg>\n  );\n};\n\nLoader.defaultProps = {\n  centered: false,\n  large: false,\n  onDark: false,\n  small: false,\n};\n\nexport default Loader;\n","import React from 'react';\nimport { IconType } from '../types/icons';\nimport cn from '../utilities/classnames';\nimport Badge from './Badge';\nimport Icon from './Icon';\nimport Loader from './Loader';\n\nexport type ButtonType = 'primary' | 'secondary' | 'danger' | 'group-item';\n\ninterface AllButtonProps {\n  disabled?: boolean;\n  loading?: boolean;\n  badge?: number | string;\n  small?: boolean;\n  onDark?: boolean;\n  type?: ButtonType;\n  onClick?: (event: any) => void;\n  group?: boolean;\n  active?: boolean;\n  icon?: IconType;\n  id?: string;\n  isLink?: boolean;\n}\n\nexport interface ButtonProps extends AllButtonProps {\n  children?: string | React.ReactNode;\n}\n\nexport interface ButtonizedProps extends AllButtonProps {\n  children?: React.ReactElement<ButtonProps>;\n}\n\nexport const Button: React.SFC<ButtonProps> = (props) => {\n  return (\n    <Buttonized {...props} >\n      <button>\n        {props.children}\n      </button>\n    </Buttonized>\n  );\n};\n\nexport const Buttonized: React.SFC<ButtonizedProps> = ({\n  children,\n  type,\n  badge,\n  disabled,\n  loading,\n  small,\n  onDark,\n  onClick,\n  group,\n  active,\n  icon,\n  id,\n}) => {\n  const hasBadge: boolean = !!badge || badge === 0;\n  const hasIcon: boolean = !!icon;\n  const content: any[] = [];\n\n  if (hasBadge) {\n    content.push(\n      <Badge key={1}>{badge}</Badge>,\n    );\n  }\n\n  if (hasIcon) {\n    content.push(\n      <Icon key={2} type={icon} />,\n    );\n  }\n\n  if (loading) {\n    content.push(\n      <Loader key={3} small onDark={type === 'primary'} />,\n    );\n  }\n\n  // the children of the element being buttonized\n  if (children.props.children) {\n    content.push(\n      children.props.children,\n    );\n  }\n\n  return (\n    React.cloneElement(\n      children,\n      {\n        className: cn('btn', `btn-${type}`, {\n          'btn-on-dark': onDark,\n          'btn-small': small,\n          'has-badge': hasBadge,\n          'has-icon': hasIcon || loading,\n          'is-active': active,\n          'is-disabled': disabled,\n          'is-loading': loading,\n        }),\n        id,\n        onClick,\n      },\n      content,\n    )\n  );\n};\n\nButton.defaultProps = {\n  active: false,\n  badge: null,\n  children: '',\n  disabled: false,\n  group: false,\n  icon: null,\n  loading: false,\n  onClick: () => {},\n  onDark: false,\n  small: false,\n  type: 'primary',\n};\n\nexport default Button;\n","import React from 'react';\nimport cn from '../utilities/classnames';\nimport Badge from './Badge';\nimport { Button, ButtonProps, ButtonType } from './Button';\nimport Icon from './Icon';\n\nexport interface DropdownButtonProps {\n  children?: any;\n  label?: string;\n  gear?: boolean;\n}\n\nexport interface DropdownButtonState {\n  active: boolean;\n}\n\nconst { map } = React.Children;\n\nexport class DropdownButton extends React.Component<\n  DropdownButtonProps & ButtonProps,\n  DropdownButtonState\n> {\n  public static defaultProps = Button.defaultProps;\n\n  public state = {\n    active: false,\n  };\n\n  public handleClick = () => {\n    const { active } = this.state;\n    this.setState({ active: !active });\n  }\n\n  public render() {\n    const {\n      badge,\n      children,\n      disabled,\n      gear,\n      group,\n      icon,\n      label,\n      loading,\n      onClick,\n      onDark,\n      small,\n      type,\n    } = this.props;\n    const { active } = this.state;\n    const hasBadge: boolean = !!badge || badge === 0;\n    const hasIcon: boolean = !!icon;\n\n    let buttonType: ButtonType = type;\n    if (gear) { buttonType = 'secondary'; }\n\n    const links = map(children, (link: React.ReactElement<any>) => {\n      return React.cloneElement(link, {\n        className: `${link.props.className} dropdown-link`,\n      });\n    });\n\n    return (\n      <div className=\"btn-list\">\n        <div\n          className={cn('btn', 'btn-dropdown', 'dropdown', `btn-${buttonType}`, {\n            'btn-dropdown-gear': gear,\n            'btn-on-dark': onDark,\n            'btn-small': small,\n            'has-badge': hasBadge,\n            'has-icon': hasIcon || loading,\n            'is-active': active,\n            'is-disabled': disabled,\n            'is-loading': loading,\n          })}\n          onClick={this.handleClick}\n        >\n          {!gear && hasBadge && <Badge>{badge}</Badge>}\n          {!gear && hasIcon && <Icon type={icon} onDark={type === 'primary'} />}\n          {gear ? <Icon type=\"gear\" /> : label}\n          <ul className=\"dropdown-menu\">{links}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DropdownButton;\n"],"names":["cn"],"mappings":"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"}