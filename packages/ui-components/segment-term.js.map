{"version":3,"file":"segment-term.js","sources":["../../src/utilities/classnames.ts","../../src/components/Badge.tsx","../../src/components/Icon.tsx","../../src/components/Loader.tsx","../../src/components/Button.tsx","../../src/components/ButtonList.tsx","../../src/components/SegmentTerm/SegmentTerm.tsx"],"sourcesContent":["export default function classNames(...args: any[]): string {\n  let result = '';\n\n  for (const arg of args) {\n    if (!arg) { continue; }\n\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      result = `${result} ${arg}`;\n      continue;\n    }\n\n    if (Array.isArray(arg)) {\n      result = `${result} ${classNames(...arg)}`;\n      continue;\n    }\n\n    if (typeof arg === 'object') {\n      const keys = Object.keys(arg);\n      for (const key of keys) {\n        if (arg[key]) { result = `${result} ${key}`; }\n      }\n    }\n  }\n\n  return result.trim();\n}\n","import React from 'react';\nimport { color as validColor } from '../types/color';\nimport cn from '../utilities/classnames';\n\nexport interface BadgeProps {\n  children?: string | number;\n  color?: string;\n  content?: string | number;\n}\n\nexport const Badge: React.SFC<BadgeProps> = ({ children, color, content }) => (\n  <span className={cn('badge', color)}>{children || content}</span>\n);\n\nBadge.defaultProps = {\n  children: 0,\n  color: '',\n};\n\nexport default Badge;\n","import React from 'react';\nimport { IconType } from '../types/icons';\nimport cn from '../utilities/classnames';\n\nexport interface IconProps {\n  type: IconType;\n  className?: string;\n  onClick?: (event: any) => void;\n  onDark?: boolean;\n}\n\nconst lightStyle = { color: 'white' };\n\nexport const Icon: React.SFC<IconProps> = ({\n  type,\n  className,\n  onClick: handleClick,\n  onDark,\n}) => (\n  <i\n    className={cn('sg-icon', `sg-icon-${type}`, { [className]: !!className })}\n    onClick={handleClick}\n    style={onDark ? lightStyle : null}\n  />\n);\n\nIcon.defaultProps = {\n  className: '',\n  onDark: false,\n};\n\nexport default Icon;\n","import React from 'react';\nimport cn from '../utilities/classnames';\n\nexport interface LoaderProps {\n  onDark?: boolean;\n  large?: boolean;\n  small?: boolean;\n  centered?: boolean;\n}\n\nexport const Loader: React.SFC<LoaderProps> = ({ onDark, large, small, centered }) => {\n  let size = 10;\n  if (large) {\n    size *= 2;\n  }\n  if (small) {\n    size /= 2;\n  }\n  return (\n    <svg\n      className={cn('sg-loader', {\n        'is-centered': centered,\n        'is-large': large,\n        'is-small': small,\n        'loader-on-dark': onDark,\n      })}\n    >\n      <rect className=\"logo-square bottom-left\" width={size} height={size} />\n      <rect className=\"logo-square bottom-middle\" width={size} height={size} />\n      <rect className=\"logo-square middle\" width={size} height={size} />\n      <rect className=\"logo-square top-middle\" width={size} height={size} />\n      <rect className=\"logo-square top-right\" width={size} height={size} />\n      <rect className=\"logo-square middle-left\" width={size} height={size} />\n      <rect className=\"logo-square middle-right\" width={size} height={size} />\n    </svg>\n  );\n};\n\nLoader.defaultProps = {\n  centered: false,\n  large: false,\n  onDark: false,\n  small: false,\n};\n\nexport default Loader;\n","import React from 'react';\nimport { IconType } from '../types/icons';\nimport cn from '../utilities/classnames';\nimport Badge from './Badge';\nimport Icon from './Icon';\nimport Loader from './Loader';\n\nexport type ButtonType = 'primary' | 'secondary' | 'danger' | 'group-item';\n\ninterface AllButtonProps {\n  disabled?: boolean;\n  loading?: boolean;\n  badge?: number | string;\n  small?: boolean;\n  onDark?: boolean;\n  type?: ButtonType;\n  onClick?: (event: any) => void;\n  group?: boolean;\n  active?: boolean;\n  icon?: IconType;\n  id?: string;\n  isLink?: boolean;\n}\n\nexport interface ButtonProps extends AllButtonProps {\n  children?: string | React.ReactNode;\n}\n\nexport interface ButtonizedProps extends AllButtonProps {\n  children?: React.ReactElement<ButtonProps>;\n}\n\nexport const Button: React.SFC<ButtonProps> = (props) => {\n  return (\n    <Buttonized {...props} >\n      <button>\n        {props.children}\n      </button>\n    </Buttonized>\n  );\n};\n\nexport const Buttonized: React.SFC<ButtonizedProps> = ({\n  children,\n  type,\n  badge,\n  disabled,\n  loading,\n  small,\n  onDark,\n  onClick,\n  group,\n  active,\n  icon,\n  id,\n}) => {\n  const hasBadge: boolean = !!badge || badge === 0;\n  const hasIcon: boolean = !!icon;\n  const content: any[] = [];\n\n  if (hasBadge) {\n    content.push(\n      <Badge key={1}>{badge}</Badge>,\n    );\n  }\n\n  if (hasIcon) {\n    content.push(\n      <Icon key={2} type={icon} />,\n    );\n  }\n\n  if (loading) {\n    content.push(\n      <Loader key={3} small onDark={type === 'primary'} />,\n    );\n  }\n\n  // the children of the element being buttonized\n  if (children.props.children) {\n    content.push(\n      children.props.children,\n    );\n  }\n\n  return (\n    React.cloneElement(\n      children,\n      {\n        className: cn('btn', `btn-${type}`, {\n          'btn-on-dark': onDark,\n          'btn-small': small,\n          'has-badge': hasBadge,\n          'has-icon': hasIcon || loading,\n          'is-active': active,\n          'is-disabled': disabled,\n          'is-loading': loading,\n        }),\n        id,\n        onClick,\n      },\n      content,\n    )\n  );\n};\n\nButton.defaultProps = {\n  active: false,\n  badge: null,\n  children: '',\n  disabled: false,\n  group: false,\n  icon: null,\n  loading: false,\n  onClick: () => {},\n  onDark: false,\n  small: false,\n  type: 'primary',\n};\n\nexport default Button;\n","import React, { HTMLAttributes } from 'react';\nimport { ButtonProps } from './Button';\n\nexport interface ButtonListProps extends HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactElement<ButtonProps> | Array<React.ReactElement<ButtonProps>>;\n  onDark?: boolean;\n}\n\nconst { map } = React.Children;\n\nexport const ButtonList: React.SFC<ButtonListProps> = ({ children, onDark }) => {\n  return (\n    <div className=\"btn-list\">\n      {map(children, (button?: React.ReactElement<any>) => {\n        return button && React.cloneElement(button, { onDark });\n      })}\n    </div>\n  );\n};\n\nButtonList.defaultProps = {\n  onDark: false,\n};\n\nexport default ButtonList;\n","import React, { PureComponent } from 'react';\n\nimport cn from '../../utilities/classnames';\nimport { Button } from '../Button';\nimport { ButtonList } from '../ButtonList';\nimport { Icon } from '../Icon';\n\nexport interface SegmentTermProps {\n  hasAddButton?: boolean;\n  hasSeparator?: boolean;\n  isEditable?: boolean;\n  isEditing?: boolean;\n  label?: string;\n  onAddButtonClick?: (e: any) => void;\n  onCancel?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n  onEdit?: (e: any) => void;\n  queryName?: string;\n  renderInputs?: () => React.ReactNode;\n  showConfirm?: boolean;\n  title: string;\n}\n\nexport class SegmentTerm extends PureComponent<SegmentTermProps> {\n  public static defaultProps = {\n    hasAddButton: false,\n    hasSeparator: false,\n    isEditable: false,\n    isEditing: false,\n  };\n\n  public get termControls(): React.ReactNode {\n    const { isEditable, isEditing, onCancel, onConfirm, showConfirm } = this.props;\n\n    if (isEditing) {\n      return (\n        <ButtonList>\n          {\n            showConfirm &&\n              <Button type=\"secondary\" small onClick={onConfirm}>\n                <Icon type=\"check-thin\" />\n              </Button>\n          }\n          <Button type=\"danger\" small onClick={onCancel}>\n            <Icon type=\"x\" />\n          </Button>\n        </ButtonList>\n      );\n    }\n\n    if (isEditable) {\n      return <Icon type=\"pencil\" className=\"segment-term-edit\" />;\n    }\n\n    return null;\n  }\n\n  public render() {\n    const {\n      hasAddButton,\n      hasSeparator,\n      isEditable,\n      isEditing,\n      label,\n      onAddButtonClick,\n      onEdit,\n      queryName,\n      renderInputs,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"segment-term-wrap\">\n        <p className=\"segment-term-title\">\n          {title}\n        </p>\n        <div\n          className={cn('segment-term', { 'has-separator': hasSeparator, 'is-editable': isEditing })}\n          onClick={(isEditable && !isEditing) ? onEdit : undefined}\n        >\n        {isEditing && renderInputs && renderInputs()}\n        {\n          !isEditing &&\n            <p>\n              {`${label} `}\n              <strong>{queryName}</strong>\n            </p>\n        }\n        {this.termControls}\n        </div>\n        {\n          hasAddButton &&\n            <ButtonList>\n              <Button type=\"secondary\" icon=\"plus\" onClick={onAddButtonClick}>\n                Add Condition\n              </Button>\n            </ButtonList>\n        }\n      </div>\n    );\n  }\n}\n"],"names":["React","cn","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAAmC,cAAc;SAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;QAAd,yBAAc;;IAC/C,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;QAAjB,IAAM,GAAG,aAAA;QACZ,IAAI,CAAC,GAAG,EAAE;YAAE,SAAS;SAAE;QAEvB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACtD,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;YAC5B,SAAS;SACV;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,MAAM,GAAM,MAAM,SAAI,UAAU,eAAI,GAAG,CAAG,CAAC;YAC3C,SAAS;SACV;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG,aAAA;gBACZ,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;oBAAE,MAAM,GAAM,MAAM,SAAI,GAAK,CAAC;iBAAE;aAC/C;SACF;KACF;IAED,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;CACtB;;ACfM,IAAM,KAAK,GAA0B,UAAC,EAA4B;QAA1B,sBAAQ,EAAE,gBAAK,EAAE,oBAAO;IAAO,QAC5EA,uCAAM,SAAS,EAAEC,UAAE,CAAC,OAAO,EAAE,KAAK,CAAC,IAAG,QAAQ,IAAI,OAAO,CAAQ;CAClE,CAAC;AAEF,KAAK,CAAC,YAAY,GAAG;IACnB,QAAQ,EAAE,CAAC;IACX,KAAK,EAAE,EAAE;CACV,CAAC;;ACNF,IAAM,UAAU,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;AAEtC,AAAO,IAAM,IAAI,GAAyB,UAAC,EAK1C;QAJC,cAAI,EACJ,wBAAS,EACT,wBAAoB,EACpB,kBAAM;IACF,QACJD,oCACE,SAAS,EAAEC,UAAE,CAAC,SAAS,EAAE,aAAW,IAAM,YAAI,GAAC,SAAS,IAAG,CAAC,CAAC,SAAS,MAAG,EACzE,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,MAAM,GAAG,UAAU,GAAG,IAAI,GACjC;;CACH,CAAC;AAEF,IAAI,CAAC,YAAY,GAAG;IAClB,SAAS,EAAE,EAAE;IACb,MAAM,EAAE,KAAK;CACd,CAAC;;ACnBK,IAAM,MAAM,GAA2B,UAAC,EAAkC;QAAhC,kBAAM,EAAE,gBAAK,EAAE,gBAAK,EAAE,sBAAQ;IAC7E,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,KAAK,EAAE;QACT,IAAI,IAAI,CAAC,CAAC;KACX;IACD,IAAI,KAAK,EAAE;QACT,IAAI,IAAI,CAAC,CAAC;KACX;IACD,QACED,sCACE,SAAS,EAAEC,UAAE,CAAC,WAAW,EAAE;YACzB,aAAa,EAAE,QAAQ;YACvB,UAAU,EAAE,KAAK;YACjB,UAAU,EAAE,KAAK;YACjB,gBAAgB,EAAE,MAAM;SACzB,CAAC;QAEFD,uCAAM,SAAS,EAAC,yBAAyB,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QACvEA,uCAAM,SAAS,EAAC,2BAA2B,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QACzEA,uCAAM,SAAS,EAAC,oBAAoB,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QAClEA,uCAAM,SAAS,EAAC,wBAAwB,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QACtEA,uCAAM,SAAS,EAAC,uBAAuB,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QACrEA,uCAAM,SAAS,EAAC,yBAAyB,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI;QACvEA,uCAAM,SAAS,EAAC,0BAA0B,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAI,CACpE,EACN;CACH,CAAC;AAEF,MAAM,CAAC,YAAY,GAAG;IACpB,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,KAAK;IACZ,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,KAAK;CACb,CAAC;;ACXK,IAAM,MAAM,GAA2B,UAAC,KAAK;IAClD,QACEA,6BAAC,UAAU,eAAK,KAAK;QACnBA,6CACG,KAAK,CAAC,QAAQ,CACR,CACE,EACb;CACH,CAAC;AAEF,AAAO,IAAM,UAAU,GAA+B,UAAC,EAatD;QAZC,sBAAQ,EACR,cAAI,EACJ,gBAAK,EACL,sBAAQ,EACR,oBAAO,EACP,gBAAK,EACL,kBAAM,EACN,oBAAO,EACP,gBAAK,EACL,kBAAM,EACN,cAAI,EACJ,UAAE;IAEF,IAAM,QAAQ,GAAY,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;IACjD,IAAM,OAAO,GAAY,CAAC,CAAC,IAAI,CAAC;IAChC,IAAM,OAAO,GAAU,EAAE,CAAC;IAE1B,IAAI,QAAQ,EAAE;QACZ,OAAO,CAAC,IAAI,CACVA,6BAAC,KAAK,IAAC,GAAG,EAAE,CAAC,IAAG,KAAK,CAAS,CAC/B,CAAC;KACH;IAED,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,IAAI,CACVA,6BAAC,IAAI,IAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,GAAI,CAC7B,CAAC;KACH;IAED,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,IAAI,CACVA,6BAAC,MAAM,IAAC,GAAG,EAAE,CAAC,EAAE,KAAK,QAAC,MAAM,EAAE,IAAI,KAAK,SAAS,GAAI,CACrD,CAAC;KACH;;IAGD,IAAI,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE;QAC3B,OAAO,CAAC,IAAI,CACV,QAAQ,CAAC,KAAK,CAAC,QAAQ,CACxB,CAAC;KACH;IAED,QACEA,cAAK,CAAC,YAAY,CAChB,QAAQ,EACR;QACE,SAAS,EAAEC,UAAE,CAAC,KAAK,EAAE,SAAO,IAAM,EAAE;YAClC,aAAa,EAAE,MAAM;YACrB,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,QAAQ;YACrB,UAAU,EAAE,OAAO,IAAI,OAAO;YAC9B,WAAW,EAAE,MAAM;YACnB,aAAa,EAAE,QAAQ;YACvB,YAAY,EAAE,OAAO;SACtB,CAAC;QACF,EAAE,IAAA;QACF,OAAO,SAAA;KACR,EACD,OAAO,CACR,EACD;CACH,CAAC;AAEF,MAAM,CAAC,YAAY,GAAG;IACpB,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,IAAI;IACX,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,eAAQ;IACjB,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,SAAS;CAChB,CAAC;;AC9GM,IAAA,iCAAG,CAAoB;AAE/B,AAAO,IAAM,UAAU,GAA+B,UAAC,EAAoB;QAAlB,sBAAQ,EAAE,kBAAM;IACvE,QACED,sCAAK,SAAS,EAAC,UAAU,IACtB,GAAG,CAAC,QAAQ,EAAE,UAAC,MAAgC;QAC9C,OAAO,MAAM,IAAIA,cAAK,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;KACzD,CAAC,CACE,EACN;CACH,CAAC;AAEF,UAAU,CAAC,YAAY,GAAG;IACxB,MAAM,EAAE,KAAK;CACd,CAAC;;ACCK;IAA0B,+BAA+B;IAAzD;;KA8EN;IAtEC,sBAAW,qCAAY;aAAvB;YACQ,IAAA,eAAwE,EAAtE,0BAAU,EAAE,wBAAS,EAAE,sBAAQ,EAAE,wBAAS,EAAE,4BAAW,CAAgB;YAE/E,IAAI,SAAS,EAAE;gBACb,QACEA,6BAAC,UAAU;oBAEP,WAAW;wBACTA,6BAAC,MAAM,IAAC,IAAI,EAAC,WAAW,EAAC,KAAK,QAAC,OAAO,EAAE,SAAS;4BAC/CA,6BAAC,IAAI,IAAC,IAAI,EAAC,YAAY,GAAG,CACnB;oBAEbA,6BAAC,MAAM,IAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,QAAC,OAAO,EAAE,QAAQ;wBAC3CA,6BAAC,IAAI,IAAC,IAAI,EAAC,GAAG,GAAG,CACV,CACE,EACb;aACH;YAED,IAAI,UAAU,EAAE;gBACd,OAAOA,6BAAC,IAAI,IAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,mBAAmB,GAAG,CAAC;aAC7D;YAED,OAAO,IAAI,CAAC;SACb;;;OAAA;IAEM,4BAAM,GAAb;QACQ,IAAA,eAWQ,EAVZ,8BAAY,EACZ,8BAAY,EACZ,0BAAU,EACV,wBAAS,EACT,gBAAK,EACL,sCAAgB,EAChB,kBAAM,EACN,wBAAS,EACT,8BAAY,EACZ,gBAAK,CACQ;QAEf,QACEA,sCAAK,SAAS,EAAC,mBAAmB;YAChCA,oCAAG,SAAS,EAAC,oBAAoB,IAC9B,KAAK,CACJ;YACJA,sCACE,SAAS,EAAEC,UAAE,CAAC,cAAc,EAAE,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,EAC1F,OAAO,EAAE,CAAC,UAAU,IAAI,CAAC,SAAS,IAAI,MAAM,GAAG,SAAS;gBAEzD,SAAS,IAAI,YAAY,IAAI,YAAY,EAAE;gBAE1C,CAAC,SAAS;oBACRD,wCACM,KAAK,MAAG;wBACZA,6CAAS,SAAS,CAAU,CAC1B;gBAEP,IAAI,CAAC,YAAY,CACZ;YAEJ,YAAY;gBACVA,6BAAC,UAAU;oBACTA,6BAAC,MAAM,IAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAE,gBAAgB,oBAErD,CACE,CAEb,EACN;KACH;IA5Ea,wBAAY,GAAG;QAC3B,YAAY,EAAE,KAAK;QACnB,YAAY,EAAE,KAAK;QACnB,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;KACjB,CAAC;IAwEJ,kBAAC;CAAA,CA9EgCE,mBAAa;;;;;;;;;;;;"}