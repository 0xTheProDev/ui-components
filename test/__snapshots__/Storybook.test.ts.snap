// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Alerts Danger Alert 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Danger Alert with Custom Icon 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-check-circle"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert with Custom Icon 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert with Custom Icon 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Badge bluebird 1`] = `
<span
  className="badge bluebird"
>
  bluebird
</span>
`;

exports[`Storyshots Badge burnt-orange 1`] = `
<span
  className="badge burnt-orange"
>
  burnt-orange
</span>
`;

exports[`Storyshots Badge caribbean 1`] = `
<span
  className="badge caribbean"
>
  caribbean
</span>
`;

exports[`Storyshots Badge carrot 1`] = `
<span
  className="badge carrot"
>
  carrot
</span>
`;

exports[`Storyshots Badge cobalt 1`] = `
<span
  className="badge cobalt"
>
  cobalt
</span>
`;

exports[`Storyshots Badge crown 1`] = `
<span
  className="badge crown"
>
  crown
</span>
`;

exports[`Storyshots Badge grass-stain 1`] = `
<span
  className="badge grass-stain"
>
  grass-stain
</span>
`;

exports[`Storyshots Badge lavender 1`] = `
<span
  className="badge lavender"
>
  lavender
</span>
`;

exports[`Storyshots Badge lime 1`] = `
<span
  className="badge lime"
>
  lime
</span>
`;

exports[`Storyshots Badge mango 1`] = `
<span
  className="badge mango"
>
  mango
</span>
`;

exports[`Storyshots Badge mantis 1`] = `
<span
  className="badge mantis"
>
  mantis
</span>
`;

exports[`Storyshots Badge ron-burgundy 1`] = `
<span
  className="badge ron-burgundy"
>
  ron-burgundy
</span>
`;

exports[`Storyshots Badge sangria 1`] = `
<span
  className="badge sangria"
>
  sangria
</span>
`;

exports[`Storyshots Badge screample 1`] = `
<span
  className="badge screample"
>
  screample
</span>
`;

exports[`Storyshots Badge seafoam 1`] = `
<span
  className="badge seafoam"
>
  seafoam
</span>
`;

exports[`Storyshots Badge sg-blue 1`] = `
<span
  className="badge sg-blue"
>
  sg-blue
</span>
`;

exports[`Storyshots Badge slate 1`] = `
<span
  className="badge slate"
>
  slate
</span>
`;

exports[`Storyshots Badge spruce 1`] = `
<span
  className="badge spruce"
>
  spruce
</span>
`;

exports[`Storyshots Badge steel 1`] = `
<span
  className="badge steel"
>
  steel
</span>
`;

exports[`Storyshots Badge wild-strawberry 1`] = `
<span
  className="badge wild-strawberry"
>
  wild-strawberry
</span>
`;

exports[`Storyshots Breadcrumb Breadcrumb with single item 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb with two items 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li>
    <a
      href="#"
    >
      Upload CSV
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb without trailing slash 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
</ol>
`;

exports[`Storyshots Button Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Danger Button 1`] = `
<button
  className="btn btn-danger"
  id={undefined}
  onClick={[Function]}
>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Badge 1`] = `
<button
  className="btn btn-danger has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Icon 1`] = `
<button
  className="btn btn-danger has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Link Anchor Button Link 1`] = `
<a
  className="btn btn-primary"
  href="#"
  id={undefined}
  onClick={[Function]}
>
  This is an anchor
</a>
`;

exports[`Storyshots Button Link Div Button Link 1`] = `
<div
  className="btn btn-primary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Danger Button Link 1`] = `
<div
  className="btn btn-danger has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Secondary Button Link 1`] = `
<div
  className="btn btn-secondary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button List Button List on a Dark Background 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary btn-on-dark"
      id={undefined}
      onClick={[Function]}
    >
      Primary
    </button>
    <button
      className="btn btn-secondary btn-on-dark"
      id={undefined}
      onClick={[Function]}
    >
      Secondary
    </button>
    <button
      className="btn btn-secondary btn-on-dark is-disabled"
      id={undefined}
      onClick={[Function]}
    >
      Disabled
    </button>
  </div>
</div>
`;

exports[`Storyshots Button List Button List on a Light Background 1`] = `
<div
  className="btn-list"
>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Primary
  </button>
  <button
    className="btn btn-secondary"
    id={undefined}
    onClick={[Function]}
  >
    Secondary
  </button>
  <button
    className="btn btn-danger"
    id={undefined}
    onClick={[Function]}
  >
    Danger
  </button>
</div>
`;

exports[`Storyshots Button Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Primary Button (Loading) 1`] = `
<button
  className="btn btn-primary has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Primary Button 1`] = `
<button
  className="btn btn-primary"
  id="stui-test-locator-abc"
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Badge 1`] = `
<button
  className="btn btn-primary has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Icon 1`] = `
<button
  className="btn btn-primary has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Secondary Button (Loading) 1`] = `
<button
  className="btn btn-secondary has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Secondary Button 1`] = `
<button
  className="btn btn-secondary"
  id={undefined}
  onClick={[Function]}
>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Button with Icon 1`] = `
<button
  className="btn btn-secondary has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots Button Small Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Small Danger Button 1`] = `
<button
  className="btn btn-danger btn-small"
  id={undefined}
  onClick={[Function]}
>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Badge 1`] = `
<button
  className="btn btn-danger btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Icon 1`] = `
<button
  className="btn btn-danger btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Small Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Small Primary Button (Loading) 1`] = `
<button
  className="btn btn-primary btn-small has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Small Primary Button 1`] = `
<button
  className="btn btn-primary btn-small"
  id={undefined}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Badge 1`] = `
<button
  className="btn btn-primary btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Icon 1`] = `
<button
  className="btn btn-primary btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Small Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Small Secondary Button (Loading) 1`] = `
<button
  className="btn btn-secondary btn-small has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Small Secondary Button 1`] = `
<button
  className="btn btn-secondary btn-small"
  id={undefined}
  onClick={[Function]}
>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Icon 1`] = `
<button
  className="btn btn-secondary btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots Card Card with Actions 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2>
        Event Annoucements
      </h2>
      <p>
        Hear about our latest events and when we're coming to a city near you.
      </p>
      <div
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Preview"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Export"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-export"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children and Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2>
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Checkbox Checked Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    defaultChecked={true}
    disabled={undefined}
    id="checkbox-transactional"
    onChange={[Function]}
    type="checkbox"
    value="Transactional"
  />
  <label
    className="input-checkbox-label"
    htmlFor="checkbox-transactional"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Checkbox Checked and Disabled Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    defaultChecked={true}
    disabled={true}
    id="checkbox-transactional"
    onChange={[Function]}
    type="checkbox"
    value="Transactional"
  />
  <label
    className="input-checkbox-label"
    htmlFor="checkbox-transactional"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Checkbox Disabled Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    defaultChecked={undefined}
    disabled={true}
    id="checkbox-transactional"
    onChange={[Function]}
    type="checkbox"
    value="Transactional"
  />
  <label
    className="input-checkbox-label"
    htmlFor="checkbox-transactional"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Checkbox Standard Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    defaultChecked={undefined}
    disabled={undefined}
    id="checkbox-transactional"
    onChange={[Function]}
    type="checkbox"
    value="Transactional"
  />
  <label
    className="input-checkbox-label"
    htmlFor="checkbox-transactional"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with plain contents 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        Very cool! 😍
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          This will make a thing happen.
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with rich contents 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        <p>
          That's a 
          <u>
            spicy
          </u>
           meatball!
        </p>
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          <p>
            <img
              src="http://placebeard.it/150/100"
            />
            <br />
            Grooming this beard cannot be undone.
          </p>
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Divider Divider (Thin) 1`] = `
<hr
  className="is-thin"
  data-label={null}
/>
`;

exports[`Storyshots Divider Divider (with Label) 1`] = `
<hr
  className=""
  data-label="Very Important"
/>
`;

exports[`Storyshots Divider Divider 1`] = `
<hr
  className=""
  data-label={null}
/>
`;

exports[`Storyshots Dropdown Button Gear Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-dropdown-gear"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-gear"
      onClick={undefined}
      style={null}
    />
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropzone Dropzone (Active) 1`] = `
<section
  className="dropzone is-active"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (Hovered) 1`] = `
<section
  className="dropzone is-hovered"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (Large) 1`] = `
<section
  className="dropzone is-large"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (with Alert) 1`] = `
<section
  className="dropzone has-inline-alert"
  role="hidden"
>
  <div
    className="alert alert-warning alert-inline"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Lorem ipsum dolor sit amet, 
      <a
        href="#"
      >
        consectetur adipiscing elit
      </a>
      . In nec augue eu lacus aliquam lobortis.
      <i
        className="sg-icon sg-icon-x"
        onClick={[Function]}
        style={null}
      />
    </p>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone 1`] = `
<section
  className="dropzone"
  role="hidden"
/>
`;

exports[`Storyshots Empty State Empty State With Buttons 1`] = `
<div
  className="table-state is-empty"
>
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary"
      id={undefined}
      onClick={[Function]}
    >
      Primary
    </button>
    <button
      className="btn btn-secondary"
      id={undefined}
      onClick={[Function]}
    >
      Secondary
    </button>
  </div>
</div>
`;

exports[`Storyshots Empty State Empty State With Everything 1`] = `
<div>
  <div
    className="table-state is-empty"
  >
    <i
      className="sg-icon sg-icon-contacts"
      onClick={undefined}
      style={null}
    />
    <h2>
      Get started adding contacts
    </h2>
    <p>
      Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
    </p>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Primary
      </button>
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Secondary
      </button>
    </div>
  </div>
  <p
    className="small is-center"
  >
    <span>
      <i
        className="sg-icon sg-icon-help"
        onClick={undefined}
        style={null}
      />
       
    </span>
    <strong>
      Need help? 
    </strong>
    <a
      href="#"
    >
      Get more info
    </a>
     
    on adding and updating contacts.
  </p>
</div>
`;

exports[`Storyshots Empty State Empty State With Icon 1`] = `
<div
  className="table-state is-empty"
>
  <i
    className="sg-icon sg-icon-contacts"
    onClick={undefined}
    style={null}
  />
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
</div>
`;

exports[`Storyshots FilterableList FilterableList 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList as a Container Component 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter Container
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button in Header 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Two Input Fields and Custom Filtering Logic 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="type-filter"
        >
          Type
        </label>
        <input
          aria-describedby=""
          id="type-filter"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots Loaders Centered Loader 1`] = `
<div
  style={
    Object {
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered"
  >
    <rect
      className="logo-square bottom-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square bottom-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-right"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-right"
      height={10}
      width={10}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Large Loader 1`] = `
<svg
  className="sg-loader is-large"
>
  <rect
    className="logo-square bottom-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square bottom-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-right"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-right"
    height={20}
    width={20}
  />
</svg>
`;

exports[`Storyshots Loaders Loader on Dark 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered is-large loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square bottom-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-right"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-right"
      height={20}
      width={20}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Small Loader 1`] = `
<svg
  className="sg-loader is-small"
>
  <rect
    className="logo-square bottom-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square bottom-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-right"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-right"
    height={5}
    width={5}
  />
</svg>
`;

exports[`Storyshots Loaders Standard Loader 1`] = `
<svg
  className="sg-loader"
>
  <rect
    className="logo-square bottom-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square bottom-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-right"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-right"
    height={10}
    width={10}
  />
</svg>
`;

exports[`Storyshots Meter Meter Above 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Health
  </span>
   
  <span
    className="meter-value"
  >
    95
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-above-50"
      style={
        Object {
          "width": "95%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 25 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Stamina
  </span>
   
  <span
    className="meter-value"
  >
    13
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-25"
      style={
        Object {
          "width": "13%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Mana
  </span>
   
  <span
    className="meter-value"
  >
    43
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-50"
      style={
        Object {
          "width": "43%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with longer content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean rutrum neque nec felis pellentesque, mollis varius libero consectetur. Nulla elementum pellentesque accumsan. Fusce sit amet quam quis elit lobortis egestas sed eu turpis. Nullam luctus pellentesque enim placerat pretium. Vivamus viverra nunc a tortor convallis egestas. Vestibulum mattis, nunc quis dapibus rhoncus, dui magna feugiat tortor, ut rutrum orci dui dictum leo. Fusce convallis diam sit amet luctus maximus. Pellentesque vehicula faucibus nunc, at cursus mi congue quis. Pellentesque tempus, est eget vestibulum ultricies, elit odio blandit diam, in venenatis risus leo luctus orci.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <div>
          <p>
            Test your integration by sending email through your application.
          </p>
          <p>
            Vivamus quis volutpat nibh. Maecenas nibh eros, fermentum posuere convallis sed, consectetur et massa. Donec feugiat a nisl quis porttitor. Ut egestas, libero non cursus posuere, quam nulla feugiat magna, eget rutrum justo odio a nisi. Donec tincidunt urna in vulputate ultricies. Fusce id dolor vehicula, tincidunt neque vel, iaculis nulla. Duis sed arcu leo.
          </p>
        </div>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with short content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <p>
          Test your integration by sending email through your application.
        </p>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots PageHeader Page Header containing: Breadcrumbs and a Page Heading 1`] = `
<header>
  <ol
    className="breadcrumb"
  >
    <li>
      <a
        href="#"
      >
        Contacts
      </a>
    </li>
    <li>
      <a
        href="#"
      >
        Upload CSV
      </a>
    </li>
    <li />
  </ol>
  <div
    className="content-header"
    style={
      Object {
        "marginTop": 10,
      }
    }
  >
    <h1
      style={
        Object {
          "color": "#294661",
          "fontFamily": "Colfax,Proxima Nova,Helvetica,sans-serif",
          "fontWeight": 300,
        }
      }
    >
      Page Title
    </h1>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Create Campaign
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Progress Horizontal Progress 1`] = `
<section
  className="progress-container"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Progress Vertical Progress 1`] = `
<section
  className="progress-container is-vertical"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Radio Checked Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-id-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-id-1"
  >
    Jim
  </label>
</div>
`;

exports[`Storyshots Radio Checked and Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={true}
    id="bill"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="bill-id-1"
  />
  <label
    className="input-radio-label"
    htmlFor="bill"
  >
    Bill
  </label>
</div>
`;

exports[`Storyshots Radio Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={true}
    id="disabled-cust-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="disabled-jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="disabled-cust-1"
  >
    disabled Jim
  </label>
</div>
`;

exports[`Storyshots Radio Multiple radio btns 1`] = `
Array [
  <div
    className="input-radio-wrap"
  >
    <input
      checked={true}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-1"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-1"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-1"
    >
      Choice 1
    </label>
  </div>,
  <div
    className="input-radio-wrap"
  >
    <input
      checked={false}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-2"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-2"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-2"
    >
      Choice 2
    </label>
  </div>,
]
`;

exports[`Storyshots Radio Standard Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-type"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="SYSTEM_TX_VAL"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-type"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Segment Term Segment terms 1`] = `
Array [
  <section
    className="segment-term-wrap"
  >
    <span
      className="segment-term-title"
    >
      <strong
        className=""
      >
        Entry Criteria
      </strong>
      <small>
        =
      </small>
    </span>
    <span
      className="segment-term has-separator"
    >
      <section
        className="segment-term-inputs"
      >
        <span
          className="segment-term-description"
        >
          The first time a contact is added to 
          <strong>
            People in Los Angeles
          </strong>
        </span>
        <i
          className="sg-icon sg-icon-pencil segment-term-inputs-edit"
          onClick={undefined}
          style={null}
        />
      </section>
    </span>
  </section>,
  <section
    className="segment-term-wrap"
  >
    <span
      className="segment-term-title"
    >
      <strong
        className="segment-terms-or"
      >
        Or
      </strong>
      
    </span>
    <span
      className="segment-term"
    >
      <section
        className="segment-term-inputs"
      >
        <span
          className="segment-term-description"
        >
          Every time a contact is added to 
          <strong>
            People in Denver
          </strong>
        </span>
        <i
          className="sg-icon sg-icon-pencil segment-term-inputs-edit"
          onClick={undefined}
          style={null}
        />
      </section>
      <i
        className="sg-icon sg-icon-create"
        onClick={undefined}
        style={null}
      />
    </span>
  </section>,
]
`;

exports[`Storyshots Segment Term Segment terms which cannot be edited 1`] = `
<section
  className="segment-term-wrap"
>
  <span
    className="segment-term-title"
  >
    <strong
      className=""
    >
      Entry Criteria
    </strong>
    <small>
      =
    </small>
  </span>
  <span
    className="segment-term"
  >
    <section
      className="segment-term-inputs"
    >
      <span
        className="segment-term-description"
      >
        The first time a contact is added to 
        <strong>
          People in Los Angeles
        </strong>
      </span>
    </section>
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
  </span>
</section>
`;

exports[`Storyshots Segment Term Segment terms which is being edited 1`] = `
<section
  className="segment-term-wrap"
>
  <span
    className="segment-term-title"
  >
    <strong
      className=""
    >
      Entry Criteria
    </strong>
    <small>
      =
    </small>
  </span>
  <span
    className="segment-term"
  >
    <section
      className="segment-term-inputs is-editable"
    >
      <div
        className="input-select-wrap"
      >
        <label
          className="input-select-label"
          htmlFor="select-a"
        >
          Select send conditions
        </label>
        <select
          id="select-a"
        >
          <option>
            The first time a contact
          </option>
        </select>
      </div>
      <div
        className="input-select-wrap"
      >
        <label
          className="input-select-label"
          htmlFor="select-b"
        >
          Select contact criteria
        </label>
        <select
          id="select-b"
        >
          <option>
            Abandons a cart
          </option>
        </select>
      </div>
      <div
        className="btn-list"
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </div>
    </section>
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
  </span>
</section>
`;

exports[`Storyshots Segment Term Segment terms which is being edited and is filled out 1`] = `
<section
  className="segment-term-wrap"
>
  <span
    className="segment-term-title"
  >
    <strong
      className=""
    >
      Entry Criteria
    </strong>
    <small>
      =
    </small>
  </span>
  <span
    className="segment-term"
  >
    <section
      className="segment-term-inputs is-editable"
    >
      <div
        className="input-select-wrap"
      >
        <select
          id="select-a"
        >
          <option>
            The first time a contact
          </option>
        </select>
      </div>
      <div
        className="input-select-wrap"
      >
        <select
          id="select-b"
        >
          <option>
            Abandons a cart
          </option>
        </select>
      </div>
      <div
        className="input-select-wrap"
      >
        <select
          id="select-c"
        >
          <option>
            People in Los Angeles
          </option>
        </select>
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-check"
            onClick={undefined}
            style={null}
          />
        </button>
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </div>
    </section>
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
  </span>
</section>
`;

exports[`Storyshots Select Disabled Select 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <label
    className="input-select-label"
    htmlFor="select2-example-required"
  >
    Sender
  </label>
  <select
    aria-hidden="true"
    className="input-select2 select2-hidden-accessible"
    data-placeholder="Select a Sender"
    id="select2-example-required"
    tabIndex={-1}
  >
    <option />
    <option
      value="Jason"
    >
      Jason
    </option>
    <option
      value="Evan"
    >
      Evan
    </option>
    <option
      value="Katrina"
    >
      Katrina
    </option>
  </select>
  <span
    className="select2 select2-container select2-container--default select2-container--below"
    dir="ltr"
    onBlur={[Function]}
    onClick={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <span
      className="selection"
    >
      <span
        aria-expanded="false"
        aria-haspopup="true"
        aria-labelledby="select2-select2-example-required-container"
        className="select2-selection select2-selection--single"
        role="combobox"
        tabIndex={0}
      >
        <span
          className="select2-selection__rendered"
          id="select2-select2-example-required-container"
        >
          <span
            className="select2-selection__placeholder"
          >
            Select a Sender
          </span>
        </span>
        <span
          className="select2-selection__arrow"
          role="presentation"
        >
          <b
            role="presentation"
          />
        </span>
      </span>
    </span>
    <span
      aria-hidden="true"
      className="dropdown-wrapper"
    />
  </span>
</div>
`;

exports[`Storyshots Select Required Select 1`] = `
<div
  className="input-select-wrap is-required"
>
  <label
    className="input-select-label"
    htmlFor="select2-example-required"
  >
    Sender
  </label>
  <select
    aria-hidden="true"
    className="input-select2 select2-hidden-accessible"
    data-placeholder="Select a Sender"
    id="select2-example-required"
    tabIndex={-1}
  >
    <option />
    <option
      value="Jason"
    >
      Jason
    </option>
    <option
      value="Evan"
    >
      Evan
    </option>
    <option
      value="Katrina"
    >
      Katrina
    </option>
  </select>
  <span
    className="select2 select2-container select2-container--default select2-container--below"
    dir="ltr"
    onBlur={[Function]}
    onClick={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <span
      className="selection"
    >
      <span
        aria-expanded="false"
        aria-haspopup="true"
        aria-labelledby="select2-select2-example-required-container"
        className="select2-selection select2-selection--single"
        role="combobox"
        tabIndex={0}
      >
        <span
          className="select2-selection__rendered"
          id="select2-select2-example-required-container"
        >
          <span
            className="select2-selection__placeholder"
          >
            Select a Sender
          </span>
        </span>
        <span
          className="select2-selection__arrow"
          role="presentation"
        >
          <b
            role="presentation"
          />
        </span>
      </span>
    </span>
    <span
      aria-hidden="true"
      className="dropdown-wrapper"
    />
  </span>
</div>
`;

exports[`Storyshots Select Select with Error 1`] = `
<div
  className="input-select-wrap is-error"
>
  <label
    className="input-select-label"
    htmlFor="select2-example-required"
  >
    Sender
  </label>
  <select
    aria-hidden="true"
    className="input-select2 select2-hidden-accessible"
    data-placeholder="Select a Sender"
    id="select2-example-required"
    tabIndex={-1}
  >
    <option />
    <option
      value="Jason"
    >
      Jason
    </option>
    <option
      value="Evan"
    >
      Evan
    </option>
    <option
      value="Katrina"
    >
      Katrina
    </option>
  </select>
  <span
    className="select2 select2-container select2-container--default select2-container--below"
    dir="ltr"
    onBlur={[Function]}
    onClick={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <span
      className="selection"
    >
      <span
        aria-expanded="false"
        aria-haspopup="true"
        aria-labelledby="select2-select2-example-required-container"
        className="select2-selection select2-selection--single"
        role="combobox"
        tabIndex={0}
      >
        <span
          className="select2-selection__rendered"
          id="select2-select2-example-required-container"
        >
          <span
            className="select2-selection__placeholder"
          >
            Select a Sender
          </span>
        </span>
        <span
          className="select2-selection__arrow"
          role="presentation"
        >
          <b
            role="presentation"
          />
        </span>
      </span>
    </span>
    <span
      aria-hidden="true"
      className="dropdown-wrapper"
    />
  </span>
</div>
`;

exports[`Storyshots Select Standard Select 1`] = `
<div
  className="input-select-wrap"
>
  <label
    className="input-select-label"
    htmlFor="select2-example-required"
  >
    Sender
  </label>
  <select
    aria-hidden="true"
    className="input-select2 select2-hidden-accessible"
    data-placeholder="Select a Sender"
    id="select2-example-required"
    tabIndex={-1}
  >
    <option />
    <option
      value="Jason"
    >
      Jason
    </option>
    <option
      value="Evan"
    >
      Evan
    </option>
    <option
      value="Katrina"
    >
      Katrina
    </option>
  </select>
  <span
    className="select2 select2-container select2-container--default select2-container--below"
    dir="ltr"
    onBlur={[Function]}
    onClick={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <span
      className="selection"
    >
      <span
        aria-expanded="false"
        aria-haspopup="true"
        aria-labelledby="select2-select2-example-required-container"
        className="select2-selection select2-selection--single"
        role="combobox"
        tabIndex={0}
      >
        <span
          className="select2-selection__rendered"
          id="select2-select2-example-required-container"
        >
          <span
            className="select2-selection__placeholder"
          >
            Select a Sender
          </span>
        </span>
        <span
          className="select2-selection__arrow"
          role="presentation"
        >
          <b
            role="presentation"
          />
        </span>
      </span>
    </span>
    <span
      aria-hidden="true"
      className="dropdown-wrapper"
    />
  </span>
</div>
`;

exports[`Storyshots SideModal SideModal 1`] = `
Array [
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>,
  <div
    className="side-modal"
  >
    <h1>
      Very cool! 😍
    </h1>
    <button
      className="btn btn-secondary"
      id={undefined}
      onClick={[Function]}
    >
      Alright then
    </button>
  </div>,
  <div
    className="modal-mask"
    onClick={[Function]}
  />,
]
`;

exports[`Storyshots Slider Slider with Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
  <div
    className="input-range-percent"
  >
    40
    %
  </div>
</div>
`;

exports[`Storyshots Slider Slider without Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
</div>
`;

exports[`Storyshots Small Footer Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    What the what? 
  </strong>
  This component is just fantastic.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  Get more info on adding and updating contacts.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer with Link 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  <a
    href="#"
  >
    Get more info
  </a>
   
  on adding and updating contacts.
</p>
`;

exports[`Storyshots Table Standard 1`] = `
<table
  className="table-wrap"
>
  <thead
    className=""
  >
    <tr
      className=""
    >
      <th
        className=""
      >
        Contacts
      </th>
      <th
        className=""
      >
        Date Added
      </th>
      <th
        className=""
      >
        Last Opened
      </th>
      <th
        className=""
      >
        Last Clicked
      </th>
      <th
        className=""
      >
        Actions
      </th>
    </tr>
  </thead>
  <tbody
    className=""
  >
    <tr
      className=""
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          todd.moy@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        02/02/2015
      </td>
      <td
        className="stats"
      >
        02/10/2016
      </td>
      <td
        className="stats"
      >
        02/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Tabs Centered Tabs 1`] = `
<ul
  className="tab-wrapper is-centered"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Standard Tabs 1`] = `
<ul
  className="tab-wrapper"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Zero-Border Tabs 1`] = `
<ul
  className="tab-wrapper zero-border"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Text Input Stateless Text Input with No Value Passed In 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value=""
  />
  
</div>
`;

exports[`Storyshots Text Input Stateless Text Input with a Value Passed as a Prop 1`] = `
<div
  className="input-text-wrap has-value"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value="Passed-In Value"
  />
  
</div>
`;

exports[`Storyshots Text Input Text Input Is Disabled 1`] = `
<div
  className="input-text-wrap is-disabled"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`Storyshots Text Input Text Input Large 1`] = `
<div
  className="input-text-wrap is-large"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Large Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`Storyshots Text Input Text Input Simple 1`] = `
<div
  className="input-text-wrap is-required"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Test Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`Storyshots Text Input Text Input With Error 1`] = `
<div
  className="input-text-wrap is-error"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  <span
    className="input-info danger"
    id="test-input-simple-info"
  >
    This test input is wrong somehow.
  </span>
</div>
`;

exports[`Storyshots Text Input Text Input With Info 1`] = `
<div
  className="input-text-wrap"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This test input is better then your test input.
  </span>
</div>
`;

exports[`Storyshots Text Input Text Input With Numbers 1`] = `
<div
  className="input-text-wrap"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    A Number
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="number"
    value={undefined}
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This input always returns a number, not a string.
  </span>
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons 1`] = `
<div
  className="btn-group"
>
  <button
    className="btn btn-group-item is-active"
    id={undefined}
    onClick={[Function]}
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Week
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Month
  </button>
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons with an Explicit Active Option 1`] = `
<div
  className="btn-group"
>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Week
  </button>
  <button
    className="btn btn-group-item is-active"
    id={undefined}
    onClick={[Function]}
  >
    Month
  </button>
</div>
`;

exports[`Storyshots Tooltip HTML Content 1`] = `
<div
  className="input-text-wrap"
>
  <label
    className="input-text-label"
  >
    CCV
  </label>
  <input
    id="input-text-example-ccv"
    type="text"
  />
  <div
    className="input-info-tooltip"
  >
    <div>
      <div
        className="tooltip-js-parent"
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <i
          className="sg-icon sg-icon-info-circle"
          onClick={undefined}
          style={null}
        />
      </div>
      <div
        className="tooltip-js-content  is-left"
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        style={
          Object {
            "top": -3,
          }
        }
      >
        <p>
          The 
          <a
            href="#"
          >
            CCV number
          </a>
           is a 3 or 4 digit security code printed on the front or back of your card.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip Standard (Down) 1`] = `
<h3>
  Tooltip Down
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="down"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Left) 1`] = `
<h3>
  Tooltip Left
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="left"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Right) 1`] = `
<h3>
  Tooltip Right
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="right"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Up) 1`] = `
<h3>
  Tooltip Up
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="up"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Underline 1`] = `
<span
  className="has-underline"
  data-tooltip="That means automatic teller machine."
  data-tooltip-pos="right"
>
  <span>
    ATM
  </span>
</span>
`;
