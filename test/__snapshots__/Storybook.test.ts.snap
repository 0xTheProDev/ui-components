// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Alerts Alert which is not dismissable 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Changes you've made to this email have not been applied to your live automation.
    <button
      className="btn btn-primary"
      id={undefined}
      onClick={[Function]}
    >
      Save and Apply
    </button>
  </p>
</div>
`;

exports[`Storyshots Alerts Danger Alert 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Danger Alert with Custom Icon 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-check-circle"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert with Custom Icon 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert with Custom Icon 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Badge bluebird 1`] = `
<span
  className="badge bluebird"
>
  bluebird
</span>
`;

exports[`Storyshots Badge burnt-orange 1`] = `
<span
  className="badge burnt-orange"
>
  burnt-orange
</span>
`;

exports[`Storyshots Badge caribbean 1`] = `
<span
  className="badge caribbean"
>
  caribbean
</span>
`;

exports[`Storyshots Badge carrot 1`] = `
<span
  className="badge carrot"
>
  carrot
</span>
`;

exports[`Storyshots Badge cobalt 1`] = `
<span
  className="badge cobalt"
>
  cobalt
</span>
`;

exports[`Storyshots Badge crown 1`] = `
<span
  className="badge crown"
>
  crown
</span>
`;

exports[`Storyshots Badge grass-stain 1`] = `
<span
  className="badge grass-stain"
>
  grass-stain
</span>
`;

exports[`Storyshots Badge lavender 1`] = `
<span
  className="badge lavender"
>
  lavender
</span>
`;

exports[`Storyshots Badge lime 1`] = `
<span
  className="badge lime"
>
  lime
</span>
`;

exports[`Storyshots Badge mango 1`] = `
<span
  className="badge mango"
>
  mango
</span>
`;

exports[`Storyshots Badge mantis 1`] = `
<span
  className="badge mantis"
>
  mantis
</span>
`;

exports[`Storyshots Badge ron-burgundy 1`] = `
<span
  className="badge ron-burgundy"
>
  ron-burgundy
</span>
`;

exports[`Storyshots Badge sangria 1`] = `
<span
  className="badge sangria"
>
  sangria
</span>
`;

exports[`Storyshots Badge screample 1`] = `
<span
  className="badge screample"
>
  screample
</span>
`;

exports[`Storyshots Badge seafoam 1`] = `
<span
  className="badge seafoam"
>
  seafoam
</span>
`;

exports[`Storyshots Badge sg-blue 1`] = `
<span
  className="badge sg-blue"
>
  sg-blue
</span>
`;

exports[`Storyshots Badge slate 1`] = `
<span
  className="badge slate"
>
  slate
</span>
`;

exports[`Storyshots Badge spruce 1`] = `
<span
  className="badge spruce"
>
  spruce
</span>
`;

exports[`Storyshots Badge steel 1`] = `
<span
  className="badge steel"
>
  steel
</span>
`;

exports[`Storyshots Badge wild-strawberry 1`] = `
<span
  className="badge wild-strawberry"
>
  wild-strawberry
</span>
`;

exports[`Storyshots Breadcrumb Breadcrumb with single item 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb with two items 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li>
    <a
      href="#"
    >
      Upload CSV
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb without trailing slash 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
</ol>
`;

exports[`Storyshots Button Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Danger Button 1`] = `
<button
  className="btn btn-danger"
  id={undefined}
  onClick={[Function]}
>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Badge 1`] = `
<button
  className="btn btn-danger has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Icon 1`] = `
<button
  className="btn btn-danger has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Link Anchor Button Link 1`] = `
<a
  className="btn btn-primary"
  href="#"
  id={undefined}
  onClick={[Function]}
>
  This is an anchor
</a>
`;

exports[`Storyshots Button Link Div Button Link 1`] = `
<div
  className="btn btn-primary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Danger Button Link 1`] = `
<div
  className="btn btn-danger has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Secondary Button Link 1`] = `
<div
  className="btn btn-secondary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button List Button List on a Dark Background 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary btn-on-dark"
      id={undefined}
      onClick={[Function]}
    >
      Primary
    </button>
    <button
      className="btn btn-secondary btn-on-dark"
      id={undefined}
      onClick={[Function]}
    >
      Secondary
    </button>
    <button
      className="btn btn-secondary btn-on-dark is-disabled"
      id={undefined}
      onClick={[Function]}
    >
      Disabled
    </button>
  </div>
</div>
`;

exports[`Storyshots Button List Button List on a Light Background 1`] = `
<div
  className="btn-list"
>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Primary
  </button>
  <button
    className="btn btn-secondary"
    id={undefined}
    onClick={[Function]}
  >
    Secondary
  </button>
  <button
    className="btn btn-danger"
    id={undefined}
    onClick={[Function]}
  >
    Danger
  </button>
</div>
`;

exports[`Storyshots Button Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Primary Button (Loading) 1`] = `
<button
  className="btn btn-primary has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Primary Button 1`] = `
<button
  className="btn btn-primary"
  id="stui-test-locator-abc"
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Badge 1`] = `
<button
  className="btn btn-primary has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Icon 1`] = `
<button
  className="btn btn-primary has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Secondary Button (Loading) 1`] = `
<button
  className="btn btn-secondary has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Secondary Button 1`] = `
<button
  className="btn btn-secondary"
  id={undefined}
  onClick={[Function]}
>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Button with Icon 1`] = `
<button
  className="btn btn-secondary has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots Button Small Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Small Danger Button 1`] = `
<button
  className="btn btn-danger btn-small"
  id={undefined}
  onClick={[Function]}
>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Badge 1`] = `
<button
  className="btn btn-danger btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Icon 1`] = `
<button
  className="btn btn-danger btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Small Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Small Primary Button (Loading) 1`] = `
<button
  className="btn btn-primary btn-small has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Small Primary Button 1`] = `
<button
  className="btn btn-primary btn-small"
  id={undefined}
  onClick={[Function]}
>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Badge 1`] = `
<button
  className="btn btn-primary btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Icon 1`] = `
<button
  className="btn btn-primary btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Small Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary btn-small is-disabled"
  id={undefined}
  onClick={[Function]}
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Small Secondary Button (Loading) 1`] = `
<button
  className="btn btn-secondary btn-small has-icon is-loading"
  id={undefined}
  onClick={[Function]}
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Small Secondary Button 1`] = `
<button
  className="btn btn-secondary btn-small"
  id={undefined}
  onClick={[Function]}
>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary btn-small has-badge"
  id={undefined}
  onClick={[Function]}
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Icon 1`] = `
<button
  className="btn btn-secondary btn-small has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots Card Card with Actions 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        Event Annoucements
      </h2>
      <p>
        Hear about our latest events and when we're coming to a city near you.
      </p>
      <div
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Preview"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Export"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-export"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children and Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots CenterModal CenterModal with footer and header, no x 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="center-modal"
  >
    <h1>
      Scorpion XING Zone 🦂
    </h1>
    <p>
      Please do not feed the scorpions. Doing so could result in scorpion wounds, fines of up to $2,500 and up to 5 years of community service.
    </p>
    <div
      className="modal-footer"
    >
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
  <div
    className="modal-mask"
    onClick={[Function]}
  />
</div>
`;

exports[`Storyshots CenterModal CenterModal without footer or header, with x 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="center-modal"
  >
    <i
      className="sg-icon sg-icon-x"
      data-role="close-center-modal"
      onClick={[Function]}
    />
    <p>
      Please do not feed the scorpions. Doing so could result in scorpion wounds, fines of up to $2,500 and up to 5 years of community service.
    </p>
  </div>
  <div
    className="modal-mask"
    onClick={[Function]}
  />
</div>
`;

exports[`Storyshots Checkbox Disabled Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    checked={false}
    disabled={true}
    id="disabled-checkbox"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
  <label
    className="input-checkbox-label"
    htmlFor="disabled-checkbox"
  >
    Marketing
  </label>
</div>
`;

exports[`Storyshots Checkbox Standard Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    checked={false}
    disabled={undefined}
    id="standard-checkbox"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
  <label
    className="input-checkbox-label"
    htmlFor="standard-checkbox"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with icon 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header conf-alert-header-with-icon"
      >
        <i
          className="sg-icon sg-icon-trash"
          onClick={undefined}
          style={null}
        />
        Very cool! 😍
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          This will make a thing happen.
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with plain contents 1`] = `
<div>
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        Very cool! 😍
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          This will make a thing happen.
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Divider Divider (Thin) 1`] = `
<hr
  className="is-thin"
  data-label={null}
/>
`;

exports[`Storyshots Divider Divider (with Label) 1`] = `
<hr
  className="has-label"
  data-label="Very Important"
/>
`;

exports[`Storyshots Divider Divider 1`] = `
<hr
  className=""
  data-label={null}
/>
`;

exports[`Storyshots Dropdown Button Gear Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-dropdown-gear"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-gear"
      onClick={undefined}
      style={null}
    />
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="undefined dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropzone Dropzone (Active) 1`] = `
<section
  className="dropzone is-active"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (Hovered) 1`] = `
<section
  className="dropzone is-hovered"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (Large) 1`] = `
<section
  className="dropzone is-large"
  role="hidden"
/>
`;

exports[`Storyshots Dropzone Dropzone (with Alert) 1`] = `
<section
  className="dropzone has-inline-alert"
  role="hidden"
>
  <div
    className="alert alert-warning alert-inline"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Lorem ipsum dolor sit amet, 
      <a
        href="#"
      >
        consectetur adipiscing elit
      </a>
      . In nec augue eu lacus aliquam lobortis.
      <i
        className="sg-icon sg-icon-x"
        onClick={[Function]}
        style={null}
      />
    </p>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone 1`] = `
<section
  className="dropzone"
  role="hidden"
/>
`;

exports[`Storyshots EmailCard Email Card - Edit Mode 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Select Send Time
    </a>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Live 1`] = `
<div
  className="email-card-wrap is-live"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stat"
    >
      <p
        className="stat "
      >
        12,230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat delivered"
      >
        96.60%
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-opens"
      >
        80.20%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-clicks"
      >
        60.24%
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unsubscribes"
      >
        2.04%
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Multi Editable 1`] = `
<div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          1
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          2
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          3
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          4
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="btn-list email-card-add"
  >
    <button
      className="btn btn-secondary"
      id={undefined}
      onClick={null}
    >
      Add an Email
    </button>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Multi Live 1`] = `
<div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send Instantly
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          1
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 1
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          2
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 2
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          3
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 3
      </a>
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stat"
      >
        <p
          className="stat "
        >
          12,230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat delivered"
        >
          96.60%
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-opens"
        >
          80.20%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unique-clicks"
        >
          60.24%
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stat"
      >
        <p
          className="stat unsubscribes"
        >
          2.04%
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          4
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          id={undefined}
          onClick={[Function]}
        >
          Add Email Content
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Paused 1`] = `
<div
  className="email-card-wrap is-paused"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stat"
    >
      <p
        className="stat "
      >
        12,230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat delivered"
      >
        96.60%
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-opens"
      >
        80.20%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-clicks"
      >
        60.24%
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unsubscribes"
      >
        2.04%
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stat"
    >
      <p
        className="stat "
      >
        12,230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat delivered"
      >
        96.60%
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-opens"
      >
        80.20%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-clicks"
      >
        60.24%
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unsubscribes"
      >
        2.04%
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with Alerts  1`] = `
<div
  className="email-card-wrap has-alert is-live"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    <div
      className="alert alert-warning"
      role="alert"
    >
      <p>
        <i
          className="sg-icon sg-icon-info-circle"
          onClick={undefined}
          style={null}
        />
        <p>
          Changes you've made to this email have not been applied to your live automation.
          <button
            className="btn btn-primary btn-small"
            id={undefined}
            onClick={[Function]}
          >
            Save and Apply
          </button>
        </p>
      </p>
    </div>
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stat"
    >
      <p
        className="stat "
      >
        12,230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat delivered"
      >
        96.60%
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-opens"
      >
        80.20%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-clicks"
      >
        60.24%
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unsubscribes"
      >
        2.04%
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <div
    className="alert alert-warning"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
      <p>
        Changes you've made to this email have not been applied to your live automation.
        <button
          className="btn btn-primary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Save and Apply
        </button>
      </p>
    </p>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with Content 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stat"
    >
      <p
        className="stat "
      >
        12,230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat delivered"
      >
        96.60%
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-opens"
      >
        80.20%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unique-clicks"
      >
        60.24%
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stat"
    >
      <p
        className="stat unsubscribes"
      >
        2.04%
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <a
        href="#"
      >
        <img
          onClick={[Function]}
          src="http://via.placeholder.com/128x88"
        />
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </a>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with No Statistics 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots Empty State Empty State With Buttons 1`] = `
<div
  className="table-state is-empty"
>
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary"
      id={undefined}
      onClick={[Function]}
    >
      Primary
    </button>
    <button
      className="btn btn-secondary"
      id={undefined}
      onClick={[Function]}
    >
      Secondary
    </button>
  </div>
</div>
`;

exports[`Storyshots Empty State Empty State With Everything 1`] = `
<div>
  <div
    className="table-state is-empty"
  >
    <i
      className="sg-icon sg-icon-contacts"
      onClick={undefined}
      style={null}
    />
    <h2>
      Get started adding contacts
    </h2>
    <p>
      Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
    </p>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Primary
      </button>
      <button
        className="btn btn-secondary"
        id={undefined}
        onClick={[Function]}
      >
        Secondary
      </button>
    </div>
  </div>
  <p
    className="small is-center"
  >
    <span>
      <i
        className="sg-icon sg-icon-help"
        onClick={undefined}
        style={null}
      />
       
    </span>
    <strong>
      Need help? 
    </strong>
    <a
      href="#"
    >
      Get more info
    </a>
     
    on adding and updating contacts.
  </p>
</div>
`;

exports[`Storyshots Empty State Empty State With Icon 1`] = `
<div
  className="table-state is-empty"
>
  <i
    className="sg-icon sg-icon-contacts"
    onClick={undefined}
    style={null}
  />
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
</div>
`;

exports[`Storyshots Empty State Empty State With Render Prop 1`] = `
<div
  className="table-state is-empty"
>
  <svg
    className="icon icon-editor-dnd"
    height="40"
    viewBox="140 30 60 60"
    width="40"
  >
    <g
      fill="none"
    >
      <path
        className="window"
        d="M198.25 83.75c0 2.485-2.015 4.5-4.5 4.5h-47.5c-2.484 0-4.5-2.016-4.5-4.5v-47.5c0-2.484 2.016-4.5 4.5-4.5h47.5c2.485 0 4.5 2.015 4.5 4.5v47.5zm1 0v-47.5c0-3.037-2.462-5.5-5.5-5.5h-47.5c-3.036 0-5.5 2.464-5.5 5.5v47.5c0 3.036 2.464 5.5 5.5 5.5h47.5c3.038 0 5.5-2.463 5.5-5.5zm-58-39.5h57.5c.276 0 .5-.224.5-.5s-.224-.5-.5-.5h-57.5c-.276 0-.5.224-.5.5s.224.5.5.5zm9.5-6.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75zm6.5 0c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75zm6.5 0c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75z"
        fill="#445B6C"
      />
      <path
        className="content"
        d="M191.25 55.75h-42.5l.5.5v-7.5l-.5.5h42.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-42.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h42.5zm-35 4h-7.5c-.276 0-.5.224-.5.5v20c0 .276.224.5.5.5h7.5c.276 0 .5-.224.5-.5v-20c0-.276-.224-.5-.5-.5zm0 1l-.5-.5v20l.5-.5h-7.5l.5.5v-20l-.5.5h7.5zm35 6.5h-27.5l.5.5v-7.5l-.5.5h27.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-27.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h27.5zm0 11.5h-27.5l.5.5v-7.5l-.5.5h27.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-27.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h27.5z"
        fill="#1A82E2"
      />
    </g>
  </svg>
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting. Use the Add List or Segment button above to get started.
  </p>
</div>
`;

exports[`Storyshots FilterableList FilterableList 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList as a Container Component 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter Container
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button in Header 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Two Input Fields and Custom Filtering Logic 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="type-filter"
        >
          Type
        </label>
        <input
          aria-describedby=""
          id="type-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          id={undefined}
          onClick={[Function]}
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots Grid 4/8 Column Config 1`] = `
<div>
  <div
    className="row"
  >
    <div
      className="col-4"
    >
      <div
        className="card"
      >
        <h2
          style={
            Object {
              "width": "100%",
            }
          }
        >
          A Four-Wide Column
        </h2>
        <p>
          This card is four columns wide.
        </p>
      </div>
    </div>
    <div
      className="col-8"
    >
      <div
        className="card"
      >
        <h2
          style={
            Object {
              "width": "100%",
            }
          }
        >
          An Eight-Wide Column
        </h2>
        <p>
          This card is eight columns wide.
        </p>
      </div>
    </div>
  </div>
  <hr
    className="is-thin"
    data-label={null}
  />
</div>
`;

exports[`Storyshots Grid Default (No Width or Offset) 1`] = `
<div
  className="row"
>
  <div
    className=""
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        A Default Column
      </h2>
      <p>
        This card is in a column with no width or offset.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Offset 5 1`] = `
<div
  className="row"
>
  <div
    className="col-offset-5"
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        An Offset Only Column
      </h2>
      <p>
        This card specifies 5 offset and no width.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Using Width & Offset 1`] = `
<div
  className="row"
>
  <div
    className="col-6 col-offset-3"
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        A Six-Wide Column
      </h2>
      <p>
        This card is in a column six units wide, offset by three.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Width 12 1`] = `
<div
  className="row"
>
  <div
    className="col-12"
  >
    <div
      className="card"
    >
      <h2
        style={
          Object {
            "width": "100%",
          }
        }
      >
        A Width Only Column
      </h2>
      <p>
        This card specifies 12 width and no offset.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Loaders Centered Loader 1`] = `
<div
  style={
    Object {
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered"
  >
    <rect
      className="logo-square bottom-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square bottom-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-right"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-right"
      height={10}
      width={10}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Fragment Loader 1`] = `
<svg
  className="fragment-loader"
>
  <rect
    className="fragment-square left"
    height="10"
    width="10"
  />
  <rect
    className="fragment-square middle"
    height="10"
    width="10"
  />
  <rect
    className="fragment-square right"
    height="10"
    width="10"
  />
</svg>
`;

exports[`Storyshots Loaders Large Loader 1`] = `
<svg
  className="sg-loader is-large"
>
  <rect
    className="logo-square bottom-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square bottom-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-right"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-right"
    height={20}
    width={20}
  />
</svg>
`;

exports[`Storyshots Loaders Loader on Dark 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered is-large loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square bottom-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-right"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-right"
      height={20}
      width={20}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Small Loader 1`] = `
<svg
  className="sg-loader is-small"
>
  <rect
    className="logo-square bottom-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square bottom-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-right"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-right"
    height={5}
    width={5}
  />
</svg>
`;

exports[`Storyshots Loaders Standard Loader 1`] = `
<svg
  className="sg-loader"
>
  <rect
    className="logo-square bottom-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square bottom-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-right"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-right"
    height={10}
    width={10}
  />
</svg>
`;

exports[`Storyshots Meter Meter Above 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Health
  </span>
   
  <span
    className="meter-value"
  >
    95
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-above-50"
      style={
        Object {
          "width": "95%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 25 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Stamina
  </span>
   
  <span
    className="meter-value"
  >
    13
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-25"
      style={
        Object {
          "width": "13%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Mana
  </span>
   
  <span
    className="meter-value"
  >
    43
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-50"
      style={
        Object {
          "width": "43%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with longer content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean rutrum neque nec felis pellentesque, mollis varius libero consectetur. Nulla elementum pellentesque accumsan. Fusce sit amet quam quis elit lobortis egestas sed eu turpis. Nullam luctus pellentesque enim placerat pretium. Vivamus viverra nunc a tortor convallis egestas. Vestibulum mattis, nunc quis dapibus rhoncus, dui magna feugiat tortor, ut rutrum orci dui dictum leo. Fusce convallis diam sit amet luctus maximus. Pellentesque vehicula faucibus nunc, at cursus mi congue quis. Pellentesque tempus, est eget vestibulum ultricies, elit odio blandit diam, in venenatis risus leo luctus orci.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <div>
          <p>
            Test your integration by sending email through your application.
          </p>
          <p>
            Vivamus quis volutpat nibh. Maecenas nibh eros, fermentum posuere convallis sed, consectetur et massa. Donec feugiat a nisl quis porttitor. Ut egestas, libero non cursus posuere, quam nulla feugiat magna, eget rutrum justo odio a nisi. Donec tincidunt urna in vulputate ultricies. Fusce id dolor vehicula, tincidunt neque vel, iaculis nulla. Duis sed arcu leo.
          </p>
        </div>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with short content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <p>
          Test your integration by sending email through your application.
        </p>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots PageHeader Page Header containing: Breadcrumbs and a Page Heading 1`] = `
<header>
  <ol
    className="breadcrumb"
  >
    <li>
      <a
        href="#"
      >
        Contacts
      </a>
    </li>
    <li>
      <a
        href="#"
      >
        Upload CSV
      </a>
    </li>
    <li />
  </ol>
  <div
    className="content-header"
    style={
      Object {
        "marginTop": 10,
      }
    }
  >
    <h1
      style={
        Object {
          "color": "#294661",
          "fontFamily": "Colfax,Proxima Nova,Helvetica,sans-serif",
          "fontWeight": 300,
        }
      }
    >
      Page Title
    </h1>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        id={undefined}
        onClick={[Function]}
      >
        Create Campaign
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Progress Horizontal Progress 1`] = `
<section
  className="progress-container"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Progress Vertical Progress 1`] = `
<section
  className="progress-container is-vertical"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Radio Checked Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-id-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-id-1"
  >
    Jim
  </label>
</div>
`;

exports[`Storyshots Radio Checked and Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={true}
    id="bill"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="bill-id-1"
  />
  <label
    className="input-radio-label"
    htmlFor="bill"
  >
    Bill
  </label>
</div>
`;

exports[`Storyshots Radio Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={true}
    id="disabled-cust-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="disabled-jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="disabled-cust-1"
  >
    disabled Jim
  </label>
</div>
`;

exports[`Storyshots Radio Multiple radio btns 1`] = `
Array [
  <div
    className="input-radio-wrap"
  >
    <input
      checked={true}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-1"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-1"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-1"
    >
      Choice 1
    </label>
  </div>,
  <div
    className="input-radio-wrap"
  >
    <input
      checked={false}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-2"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-2"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-2"
    >
      Choice 2
    </label>
  </div>,
]
`;

exports[`Storyshots Radio Standard Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-type"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="SYSTEM_TX_VAL"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-type"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Segment Term Segment term which cannot be edited 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term"
    onClick={undefined}
  >
    <p>
      The first time a contact is added to 
      <strong>
        People in Los Angeles
      </strong>
    </p>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term which is being edited 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-separator is-editable"
    onClick={undefined}
  >
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-a"
      >
        Select send conditions
      </label>
      <select
        id="select-a"
      >
        <option>
          The first time a contact
        </option>
      </select>
    </div>
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-b"
      >
        Select contact criteria
      </label>
      <select
        id="select-b"
      >
        <option>
          Abandons a cart
        </option>
      </select>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-danger btn-small"
        id={undefined}
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </button>
    </div>
  </div>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-secondary has-icon"
      id={undefined}
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-plus"
        onClick={undefined}
        style={null}
      />
      Add Condition
    </button>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term which is being edited and is filled out 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-separator is-editable"
    onClick={undefined}
  >
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-a"
      >
        Select send conditions
      </label>
      <select
        id="select-a"
      >
        <option>
          The first time a contact
        </option>
      </select>
    </div>
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-b"
      >
        Select contact criteria
      </label>
      <select
        id="select-b"
      >
        <option>
          Abandons a cart
        </option>
      </select>
    </div>
    <div
      className="input-select-wrap"
    >
      <select
        id="select-c"
      >
        <option>
          People in Los Angeles
        </option>
      </select>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-secondary btn-small"
        id={undefined}
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-check-thin"
          onClick={undefined}
          style={null}
        />
      </button>
      <button
        className="btn btn-danger btn-small"
        id={undefined}
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </button>
    </div>
  </div>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-secondary has-icon"
      id={undefined}
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-plus"
        onClick={undefined}
        style={null}
      />
      Add Condition
    </button>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term with alert 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-alert has-separator"
    onClick={[Function]}
  >
    <p>
      The first time a contact is added to 
      <strong>
        People in Los Angeles
      </strong>
    </p>
    <i
      className="sg-icon sg-icon-pencil segment-term-edit"
      onClick={undefined}
      style={null}
    />
    <div
      className="alert alert-warning"
      role="alert"
    >
      <p>
        <i
          className="sg-icon sg-icon-warning"
          onClick={undefined}
          style={null}
        />
        Changes you've made to your entry criteria have not been applied to your live automation.
        <button
          className="btn btn-primary"
          id={undefined}
          onClick={[Function]}
        >
          Save and Apply
        </button>
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term with radio btns and alert 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Exit Criteria
  </p>
  <div
    className="segment-term has-alert has-radios is-editable"
    onClick={undefined}
  >
    <div
      className="input-radio-wrap"
    >
      <input
        checked={true}
        defaultChecked={undefined}
        disabled={undefined}
        id="radio-a"
        name="example-grp"
        onChange={[Function]}
        type="radio"
        value="a"
      />
      <label
        className="input-radio-label"
        htmlFor="radio-a"
      >
        Option 1
      </label>
    </div>
    <div
      className="input-radio-wrap"
    >
      <input
        checked={true}
        defaultChecked={undefined}
        disabled={undefined}
        id="radio-b"
        name="example-grp"
        onChange={[Function]}
        type="radio"
        value="b"
      />
      <label
        className="input-radio-label"
        htmlFor="radio-b"
      >
        Option 2
      </label>
    </div>
    <div
      className="btn-list"
    />
    <div
      className="alert alert-warning"
      role="alert"
    >
      <p>
        <i
          className="sg-icon sg-icon-warning"
          onClick={undefined}
          style={null}
        />
        Changes you've made to your exit criteria have not been applied to your live automation.
        <button
          className="btn btn-primary"
          id={undefined}
          onClick={[Function]}
        >
          Save and Apply
        </button>
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment terms 1`] = `
<div>
  <div
    className="segment-term-wrap"
  >
    <p
      className="segment-term-title"
    >
      Entry Criteria
    </p>
    <div
      className="segment-term has-separator"
      onClick={[Function]}
    >
      <p>
        The first time a contact is added to 
        <strong>
          People in Los Angeles
        </strong>
      </p>
      <i
        className="sg-icon sg-icon-pencil segment-term-edit"
        onClick={undefined}
        style={null}
      />
    </div>
  </div>
  <div
    className="segment-term-wrap"
  >
    <p
      className="segment-term-title"
    >
      Or
    </p>
    <div
      className="segment-term"
      onClick={[Function]}
    >
      <p>
        Every time a contact is added to 
        <strong>
          People in Denver
        </strong>
      </p>
      <i
        className="sg-icon sg-icon-pencil segment-term-edit"
        onClick={undefined}
        style={null}
      />
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-secondary has-icon"
        id={undefined}
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-plus"
          onClick={undefined}
          style={null}
        />
        Add Condition
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots SideModal SideModal 1`] = `
Array [
  <button
    className="btn btn-primary"
    id={undefined}
    onClick={[Function]}
  >
    Open Modal
  </button>,
  <div
    className="side-modal"
  >
    <h1>
      Very cool! 😍
    </h1>
    <button
      className="btn btn-secondary"
      id={undefined}
      onClick={[Function]}
    >
      Alright then
    </button>
  </div>,
  <div
    className="modal-mask"
    onClick={[Function]}
  />,
]
`;

exports[`Storyshots Slider Slider with Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
  <div
    className="input-range-percent"
  >
    40
    %
  </div>
</div>
`;

exports[`Storyshots Slider Slider without Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
</div>
`;

exports[`Storyshots Small Footer Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    What the what? 
  </strong>
  This component is just fantastic.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  Get more info on adding and updating contacts.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer with Link 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  <a
    href="#"
  >
    Get more info
  </a>
   
  on adding and updating contacts.
</p>
`;

exports[`Storyshots Table Sortable (Custom Render) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        <span
          className="sg-icon sg-icon-button"
        />
         
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        <span
          className="sg-icon sg-icon-button"
        />
         
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Awesome Wednesday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        7
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Beautiful Thursday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        8
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Celebratory Tuesday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        6
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Delightful Friday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        9
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Excellent Monday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        5
        /2018
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Sortable (Default Render, Custom Sort) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Awesome Wednesday
      </td>
      <td
        className={undefined}
      >
        7
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Beautiful Thursday
      </td>
      <td
        className={undefined}
      >
        8
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Celebratory Tuesday
      </td>
      <td
        className={undefined}
      >
        6
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Delightful Friday
      </td>
      <td
        className={undefined}
      >
        9
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Excellent Monday
      </td>
      <td
        className={undefined}
      >
        5
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Sortable (Defaults) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Awesome Wednesday
      </td>
      <td
        className={undefined}
      >
        7
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Beautiful Thursday
      </td>
      <td
        className={undefined}
      >
        8
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Celebratory Tuesday
      </td>
      <td
        className={undefined}
      >
        6
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Delightful Friday
      </td>
      <td
        className={undefined}
      >
        9
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Excellent Monday
      </td>
      <td
        className={undefined}
      >
        5
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Standard 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className=""
        onClick={[Function]}
      >
        Contacts
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Date Added
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Last Opened
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Last Clicked
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Actions
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          todd.moy@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        02/02/2015
      </td>
      <td
        className="stats"
      >
        02/10/2016
      </td>
      <td
        className="stats"
      >
        02/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          eric.tjossem@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        03/03/2015
      </td>
      <td
        className="stats"
      >
        04/10/2016
      </td>
      <td
        className="stats"
      >
        04/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          alex.thomsen@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        05/02/2015
      </td>
      <td
        className="stats"
      >
        06/10/2016
      </td>
      <td
        className="stats"
      >
        07/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Tabs Centered Tabs 1`] = `
<ul
  className="tab-wrapper is-centered"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Standard Tabs 1`] = `
<ul
  className="tab-wrapper"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Zero-Border Tabs 1`] = `
<ul
  className="tab-wrapper zero-border"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Text Input Stateless Text Input with No Value Passed In 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name="simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots Text Input Stateless Text Input with a Value Passed as a Prop 1`] = `
<div
  className="input-text-wrap has-value"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value="Passed-In Value"
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input Is Disabled 1`] = `
<div
  className="input-text-wrap is-disabled"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  
</div>
`;

exports[`Storyshots Text Input Text Input Large 1`] = `
<div
  className="input-text-wrap is-large"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Large Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  
</div>
`;

exports[`Storyshots Text Input Text Input Simple 1`] = `
<div
  className="input-text-wrap is-required"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Test Input
  </label>
  <input
    aria-describedby={undefined}
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  
</div>
`;

exports[`Storyshots Text Input Text Input With Error 1`] = `
<div
  className="input-text-wrap is-error"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  <span
    className="input-info danger"
    id="test-input-simple-info"
  >
    This test input is wrong somehow.
  </span>
  
</div>
`;

exports[`Storyshots Text Input Text Input With Info 1`] = `
<div
  className="input-text-wrap"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="text"
    value={undefined}
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This test input is better then your test input.
  </span>
  
</div>
`;

exports[`Storyshots Text Input Text Input With Numbers 1`] = `
<div
  className="input-text-wrap"
  style={undefined}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    A Number
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    type="number"
    value={undefined}
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This input always returns a number, not a string.
  </span>
  
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons 1`] = `
<div
  className="btn-group"
>
  <button
    className="btn btn-group-item is-active"
    id={undefined}
    onClick={[Function]}
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Week
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Month
  </button>
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons with an Explicit Active Option 1`] = `
<div
  className="btn-group"
>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    id={undefined}
    onClick={[Function]}
  >
    Week
  </button>
  <button
    className="btn btn-group-item is-active"
    id={undefined}
    onClick={[Function]}
  >
    Month
  </button>
</div>
`;

exports[`Storyshots Tooltip HTML Content 1`] = `
<div
  className="input-text-wrap"
>
  <div
    className="input-text-wrap"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="input-text-example-ccv"
    >
      CCV
    </label>
    <input
      aria-describedby=""
      id="input-text-example-ccv"
      name={undefined}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="text"
      value=""
    />
    
    <div
      className="input-info-tooltip"
    >
      <div>
        <div
          className="tooltip-js-parent"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <i
            className="sg-icon sg-icon-info-circle"
            onClick={undefined}
            style={null}
          />
        </div>
        <div
          className="tooltip-js-content  is-left"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          style={
            Object {
              "top": -3,
            }
          }
        >
          <p>
            The 
            <a
              href="#"
            >
              CCV number
            </a>
             is a 3 or 4 digit security code printed on the front or back of your card.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip Standard (Down) 1`] = `
<h3>
  Tooltip Down
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="down"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Left) 1`] = `
<h3>
  Tooltip Left
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="left"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Right) 1`] = `
<h3>
  Tooltip Right
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="right"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Standard (Up) 1`] = `
<h3>
  Tooltip Up
  <span
    className={undefined}
    data-tooltip="Hello."
    data-tooltip-pos="up"
  >
    <i
      className="sg-icon sg-icon-info-circle"
      onClick={undefined}
      style={null}
    />
  </span>
</h3>
`;

exports[`Storyshots Tooltip Underline 1`] = `
<span
  className="has-underline"
  data-tooltip="That means automatic teller machine."
  data-tooltip-pos="right"
>
  <span>
    ATM
  </span>
</span>
`;

exports[`Storyshots Truncated List Custom Render Props 1`] = `
<span
  className={undefined}
>
  <span>
    Boromir
     
    (Dead)
    ,
     
  </span>
  <span>
    Elrond
     
    ,
     
  </span>
  <span>
    Frodo
     
    ,
     
  </span>
  <a
    href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
  >
    and 
    2
     more…
  </a>
</span>
`;

exports[`Storyshots Truncated List Standard - Limit 2 1`] = `
<span
  className={undefined}
>
  Boromir, Elrond
  <span>
    ,
     
    <abbr>
      <a
        href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
      >
        +
        3
         more
      </a>
    </abbr>
  </span>
</span>
`;

exports[`Storyshots Truncated List Standard - Limit Default 1`] = `
<span
  className={undefined}
>
  Boromir, Elrond, Frodo
  <span>
    ,
     
    <abbr>
      <a
        href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
      >
        +
        2
         more
      </a>
    </abbr>
  </span>
</span>
`;

exports[`Storyshots Truncated List Standard - Only 1 Item 1`] = `
<span
  className={undefined}
>
  Boromir
</span>
`;
