steps:
  - name: ":docker: Build Container"
    plugins:
      docker-compose#v2.2.1:
        build: app
        image-repository: docker.sendgrid.net/sendgrid
        cache-from: app:docker.sendgrid.net/sendgrid/ui-components:latest
  - block: ":exploding_death_star: Request Publish :exploding_death_star:"
    fields:
      - select: "Release Type"
        key: "publish-version"
        options:
          - label: "patch"
            value: "patch"
          - label: "minor"
            value: "minor"
          - label: "major"
            value: "major"
          # - label: "premajor"
          #   value: "premajor"
          # - label: "preminor"
          #   value: "preminor"
          # - label: "prepatch"
          #   value: "prepatch"
          # - label: "prerelease"
          #   value: "prerelease"

  - name: ":dragon: Lerna Publish"
    command: 
      - ls -lah ~/.ssh
      - echo ~
      - echo $PATH
      - id
      - node --version
      # - cp -r /root/sshmagic/ /root/mysshmagic/
      # - chown -R root /root/mysshmagic/
      # - chmod -R 777 /root/mysshmagic/
      # - cp /root/mysshmagic /root/.ssh
      # - ls -lah /root/.ssh
      # - ls -lah /root/.ssh/known_hosts
      # - ls -lah /root/.ssh/config
      - git fetch
      - git checkout ${BUILDKITE_BRANCH}
      - git pull
      - npx --help
      - npx lerna publish --skip-git --skip-npm --yes --cd-version $(buildkite-agent meta-data get "publish-version")
      # - tar --exclude='./node_modules' --exclude='./.git' -zcvf ./buildartifact.tgz ./**/{package.json,lerna.json}
    plugins:
      docker-compose#v2.2.1:
        run: app
        # artifact_paths: 
        #   - "./builtPackages.tar.gz"
        image-repository: docker.sendgrid.net/sendgrid
        cache-from: app:docker.sendgrid.net/sendgrid/ui-components:latest
        

  # - name: ":yarn: :docker: Build UI-component base image"
        

