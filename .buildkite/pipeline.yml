
# Welcome to your pipeline.yml file. This file is what controls what is ran during your
# build. This is a direct port of the job you were running in jenkins. We've added
# some suggestions (commented out), but we have not changed any of your logic.
#
# Feel free to change it, but please remember that the more you change it, the
# less we are able to help you figure out what went wrong!
#
# For information on some of the things you can do inside of this file, please
# check out the buildkite documentation here:
# https://buildkite.com/docs/pipelines/defining-steps
steps:

  ##############################
  # Build it & Package it
  ##############################

- name: ":yarn: :docker: Build UI-component base image"
  plugins:
    docker-compose#v2.2.1:
      build: app
      image-repository: docker.sendgrid.net/sendgrid
      cache-from: app:docker.sendgrid.net/sendgrid/ui-components:latest
- wait
- name: ":jest: Lint and Test"
  command: yarn ci-test
  plugins:
    docker-compose#v2.2.1:
      run: app

- name: ":storybook: Build Storybook"
  command: yarn build-storybook
  plugins:
    docker-compose#v2.2.1:
      run: app

- name: ":typescript: Build UI-Components"
  command: yarn ci-test
  plugins:
    docker-compose#v2.2.1:
      run: app

# The purpose of this script is to build your script in a standard manner.
  # - label: 'build_jenkins_docker_file'
  #   command: 'workflow build_jenkins_docker_file'
  #   artifact_paths: 'ci-repo/*'
  #   env:
  #     PACKAGE: true
  #     PUBLISH: true
  #   branches: 'master'

  # If we're not on the default; package, but don't publish
  # - label: 'build_jenkins_docker_file'
  #   command: 'workflow build_jenkins_docker_file'
  #   artifact_paths: 'ci-repo/*'
  #   env:
  #     PACKAGE: true
  #     PUBLISH: false
  #   branches: '!master'

  # Note: You should consider converting your .jenkins-docker file into a
  # traditional Makefile! You can check out the ussr repo to see what
  # their Makefile looks like.
  #
  # https://github.com/sendgrid/ussr/blob/master/Makefile
  #
  # When replacing your .jenkins-docker with a Makefile, you should comment
  # out the above steps and replace uncomment the make steps below.
  # - label: 'make unit'
  #   command:
  #     - 'make unit'

  # - label: 'make acceptance'
  #   command:
  #     - 'make acceptance'

  # - label: 'make package'
  #   command:
  #     - 'make package'
  #   artifact_paths: 'ci-repo/*'

  # - wait


  ##############################
  # Post-Publish
  ##############################

  # This block of steps is only going to work once you migrate to the
  # new pipeline revision logic.
  #
  # UNCOMMENTING THIS WITHOUT FULLY RUNNING STEPS IN WIKI WILL BREAK YOUR BUILD
  # https://wiki.sendgrid.net/x/QSfLAg
  #
  # - wait
  #
  # # Automatically approve and merge any chef-data prs that were created
  # # against the testing environment.
  # - label: 'approve and merge testing chef-data PRs'
  #   command:
  #     - 'buildkite-agent artifact download pipeline_chef_data_pull_request .'
  #     - 'workflow bk_approve_chef-data_pr'
  #   branches: 'master'
  #
  # - wait
  # # Automatically run the consul upload for chef-data.
  # - label: 'upload chef-data PRs'
  #   command:
  #     - 'buildkite-agent artifact download pipeline_chef_data_pull_request .'
  #     - 'workflow bk_upload_chef-data'
  #   branches: 'master'
  #   agents:
  #     queue: 'chef'

  # - wait
  # # You will want to write your own verification script to make sure that
  # # your app has been successfully uploaded to the end to end environment.
  # # please see ussr for an example of what they wrote:
  # # https://github.com/sendgrid/ussr/blob/master/bin/bk_verify_e2e.sh
  # - label: 'verify chef-data PRs'
  #   command:
  #     - 'buildkite-agent artifact download pipeline_chef_data_pull_request .'
  #     - './bin/bk_verify_e2e.sh'
  #   branches: 'master'
